// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: deplo.capnp

#include "deplo.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<25> b_90a50fbb6fae9937 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     55, 153, 174, 111, 187,  15, 165, 144,
     12,   0,   0,   0,   2,   0,   0,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  83, 116,  97, 116,
    117, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 107,   0,   0,   0,   0,   0,   0,
    101, 114, 114,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_90a50fbb6fae9937 = b_90a50fbb6fae9937.words;
#if !CAPNP_LITE
static const uint16_t m_90a50fbb6fae9937[] = {1, 0};
const ::capnp::_::RawSchema s_90a50fbb6fae9937 = {
  0x90a50fbb6fae9937, b_90a50fbb6fae9937.words, 25, nullptr, m_90a50fbb6fae9937,
  0, 2, nullptr, nullptr, nullptr, { &s_90a50fbb6fae9937, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Status_90a50fbb6fae9937, 90a50fbb6fae9937);
static const ::capnp::_::AlignedData<78> b_82b106e67d610c70 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    112,  12,  97, 125, 230,   6, 177, 130,
     12,   0,   0,   0,   1,   0,   1,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  65,  99, 116, 111,
    114,  82, 101, 103,  82, 101, 113,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 111, 114,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 100,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82b106e67d610c70 = b_82b106e67d610c70.words;
#if !CAPNP_LITE
static const uint16_t m_82b106e67d610c70[] = {2, 0, 3, 1};
static const uint16_t i_82b106e67d610c70[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_82b106e67d610c70 = {
  0x82b106e67d610c70, b_82b106e67d610c70.words, 78, nullptr, m_82b106e67d610c70,
  0, 4, i_82b106e67d610c70, nullptr, nullptr, { &s_82b106e67d610c70, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_c6dc6f1dc29ab307 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7, 179, 154, 194,  29, 111, 220, 198,
     12,   0,   0,   0,   1,   0,   1,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  65,  99, 116, 111,
    114,  82, 101, 103,  82, 101, 112,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     55, 153, 174, 111, 187,  15, 165, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c6dc6f1dc29ab307 = b_c6dc6f1dc29ab307.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c6dc6f1dc29ab307[] = {
  &s_90a50fbb6fae9937,
};
static const uint16_t m_c6dc6f1dc29ab307[] = {1, 0};
static const uint16_t i_c6dc6f1dc29ab307[] = {0, 1};
const ::capnp::_::RawSchema s_c6dc6f1dc29ab307 = {
  0xc6dc6f1dc29ab307, b_c6dc6f1dc29ab307.words, 47, d_c6dc6f1dc29ab307, m_c6dc6f1dc29ab307,
  1, 2, i_c6dc6f1dc29ab307, nullptr, nullptr, { &s_c6dc6f1dc29ab307, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_c50f4586e3d6e495 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    149, 228, 214, 227, 134,  69,  15, 197,
     12,   0,   0,   0,   1,   0,   0,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 101, 118, 105,
     99, 101,  65, 114, 103,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c50f4586e3d6e495 = b_c50f4586e3d6e495.words;
#if !CAPNP_LITE
static const uint16_t m_c50f4586e3d6e495[] = {0, 1};
static const uint16_t i_c50f4586e3d6e495[] = {0, 1};
const ::capnp::_::RawSchema s_c50f4586e3d6e495 = {
  0xc50f4586e3d6e495, b_c50f4586e3d6e495.words, 47, nullptr, m_c50f4586e3d6e495,
  0, 2, i_c50f4586e3d6e495, nullptr, nullptr, { &s_c50f4586e3d6e495, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<85> b_945ac2f67b3083dd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    221, 131,  48, 123, 246, 194,  90, 148,
     12,   0,   0,   0,   1,   0,   0,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 101, 118, 105,
     99, 101,  82, 101, 103,  82, 101, 113,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  65, 114,
    103, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    149, 228, 214, 227, 134,  69,  15, 197,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_945ac2f67b3083dd = b_945ac2f67b3083dd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_945ac2f67b3083dd[] = {
  &s_c50f4586e3d6e495,
};
static const uint16_t m_945ac2f67b3083dd[] = {0, 3, 1, 2};
static const uint16_t i_945ac2f67b3083dd[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_945ac2f67b3083dd = {
  0x945ac2f67b3083dd, b_945ac2f67b3083dd.words, 85, d_945ac2f67b3083dd, m_945ac2f67b3083dd,
  1, 4, i_945ac2f67b3083dd, nullptr, nullptr, { &s_945ac2f67b3083dd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_9bc319be449859da = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    218,  89, 152,  68, 190,  25, 195, 155,
     12,   0,   0,   0,   1,   0,   1,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 101, 118, 105,
     99, 101,  82, 101, 103,  82, 101, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     55, 153, 174, 111, 187,  15, 165, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9bc319be449859da = b_9bc319be449859da.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9bc319be449859da[] = {
  &s_90a50fbb6fae9937,
};
static const uint16_t m_9bc319be449859da[] = {0};
static const uint16_t i_9bc319be449859da[] = {0};
const ::capnp::_::RawSchema s_9bc319be449859da = {
  0x9bc319be449859da, b_9bc319be449859da.words, 33, d_9bc319be449859da, m_9bc319be449859da,
  1, 1, i_9bc319be449859da, nullptr, nullptr, { &s_9bc319be449859da, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_c15c8eb36b7f2bc4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196,  43, 127, 107, 179, 142,  92, 193,
     12,   0,   0,   0,   1,   0,   0,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 101, 118, 105,
     99, 101,  85, 110, 114, 101, 103,  82,
    101, 113,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c15c8eb36b7f2bc4 = b_c15c8eb36b7f2bc4.words;
#if !CAPNP_LITE
static const uint16_t m_c15c8eb36b7f2bc4[] = {0, 1, 2};
static const uint16_t i_c15c8eb36b7f2bc4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c15c8eb36b7f2bc4 = {
  0xc15c8eb36b7f2bc4, b_c15c8eb36b7f2bc4.words, 65, nullptr, m_c15c8eb36b7f2bc4,
  0, 3, i_c15c8eb36b7f2bc4, nullptr, nullptr, { &s_c15c8eb36b7f2bc4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_be01afc0b8b3eba5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    165, 235, 179, 184, 192, 175,   1, 190,
     12,   0,   0,   0,   1,   0,   1,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 101, 118, 105,
     99, 101,  85, 110, 114, 101, 103,  82,
    101, 112,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     55, 153, 174, 111, 187,  15, 165, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_be01afc0b8b3eba5 = b_be01afc0b8b3eba5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_be01afc0b8b3eba5[] = {
  &s_90a50fbb6fae9937,
};
static const uint16_t m_be01afc0b8b3eba5[] = {0};
static const uint16_t i_be01afc0b8b3eba5[] = {0};
const ::capnp::_::RawSchema s_be01afc0b8b3eba5 = {
  0xbe01afc0b8b3eba5, b_be01afc0b8b3eba5.words, 33, d_be01afc0b8b3eba5, m_be01afc0b8b3eba5,
  1, 1, i_be01afc0b8b3eba5, nullptr, nullptr, { &s_be01afc0b8b3eba5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_999fb44bdc4cb017 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     23, 176,  76, 220,  75, 180, 159, 153,
     12,   0,   0,   0,   1,   0,   1,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 101, 112, 108,
     82, 101, 113,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 111, 114,  82, 101, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,  12,  97, 125, 230,   6, 177, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  82, 101,
    103,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    221, 131,  48, 123, 246, 194,  90, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  85, 110,
    114, 101, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    196,  43, 127, 107, 179, 142,  92, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_999fb44bdc4cb017 = b_999fb44bdc4cb017.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_999fb44bdc4cb017[] = {
  &s_82b106e67d610c70,
  &s_945ac2f67b3083dd,
  &s_c15c8eb36b7f2bc4,
};
static const uint16_t m_999fb44bdc4cb017[] = {0, 1, 2};
static const uint16_t i_999fb44bdc4cb017[] = {0, 1, 2};
const ::capnp::_::RawSchema s_999fb44bdc4cb017 = {
  0x999fb44bdc4cb017, b_999fb44bdc4cb017.words, 65, d_999fb44bdc4cb017, m_999fb44bdc4cb017,
  3, 3, i_999fb44bdc4cb017, nullptr, nullptr, { &s_999fb44bdc4cb017, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_903b010fb7971f5e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94,  31, 151, 183,  15,   1,  59, 144,
     12,   0,   0,   0,   1,   0,   1,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 101, 112, 108,
     82, 101, 112,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 111, 114,  82, 101, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7, 179, 154, 194,  29, 111, 220, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  82, 101,
    103,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    218,  89, 152,  68, 190,  25, 195, 155,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  85, 110,
    114, 101, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    165, 235, 179, 184, 192, 175,   1, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_903b010fb7971f5e = b_903b010fb7971f5e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_903b010fb7971f5e[] = {
  &s_9bc319be449859da,
  &s_be01afc0b8b3eba5,
  &s_c6dc6f1dc29ab307,
};
static const uint16_t m_903b010fb7971f5e[] = {0, 1, 2};
static const uint16_t i_903b010fb7971f5e[] = {0, 1, 2};
const ::capnp::_::RawSchema s_903b010fb7971f5e = {
  0x903b010fb7971f5e, b_903b010fb7971f5e.words, 65, d_903b010fb7971f5e, m_903b010fb7971f5e,
  3, 3, i_903b010fb7971f5e, nullptr, nullptr, { &s_903b010fb7971f5e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_983375abf147d920 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     32, 217,  71, 241, 171, 117,  51, 152,
     12,   0,   0,   0,   1,   0,   0,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 115,  67,
     80,  85,  88,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_983375abf147d920 = b_983375abf147d920.words;
#if !CAPNP_LITE
static const uint16_t m_983375abf147d920[] = {0};
static const uint16_t i_983375abf147d920[] = {0};
const ::capnp::_::RawSchema s_983375abf147d920 = {
  0x983375abf147d920, b_983375abf147d920.words, 32, nullptr, m_983375abf147d920,
  0, 1, i_983375abf147d920, nullptr, nullptr, { &s_983375abf147d920, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_cef18fa40367ff71 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    113, 255, 103,   3, 164, 143, 241, 206,
     12,   0,   0,   0,   1,   0,   0,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 115,  77,
    101, 109,  88,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cef18fa40367ff71 = b_cef18fa40367ff71.words;
#if !CAPNP_LITE
static const uint16_t m_cef18fa40367ff71[] = {0};
static const uint16_t i_cef18fa40367ff71[] = {0};
const ::capnp::_::RawSchema s_cef18fa40367ff71 = {
  0xcef18fa40367ff71, b_cef18fa40367ff71.words, 32, nullptr, m_cef18fa40367ff71,
  0, 1, i_cef18fa40367ff71, nullptr, nullptr, { &s_cef18fa40367ff71, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_912a566c082d693b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59, 105,  45,   8, 108,  86,  42, 145,
     12,   0,   0,   0,   1,   0,   0,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 115,  83,
    112,  99,  88,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_912a566c082d693b = b_912a566c082d693b.words;
#if !CAPNP_LITE
static const uint16_t m_912a566c082d693b[] = {0};
static const uint16_t i_912a566c082d693b[] = {0};
const ::capnp::_::RawSchema s_912a566c082d693b = {
  0x912a566c082d693b, b_912a566c082d693b.words, 32, nullptr, m_912a566c082d693b,
  0, 1, i_912a566c082d693b, nullptr, nullptr, { &s_912a566c082d693b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_a14c0f51e4368c0b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11, 140,  54, 228,  81,  15,  76, 161,
     12,   0,   0,   0,   1,   0,   0,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 115,  78,
    101, 116,  88,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a14c0f51e4368c0b = b_a14c0f51e4368c0b.words;
#if !CAPNP_LITE
static const uint16_t m_a14c0f51e4368c0b[] = {0};
static const uint16_t i_a14c0f51e4368c0b[] = {0};
const ::capnp::_::RawSchema s_a14c0f51e4368c0b = {
  0xa14c0f51e4368c0b, b_a14c0f51e4368c0b.words, 32, nullptr, m_a14c0f51e4368c0b,
  0, 1, i_a14c0f51e4368c0b, nullptr, nullptr, { &s_a14c0f51e4368c0b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<77> b_b10759629e25715c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     92, 113,  37, 158,  98,  89,   7, 177,
     12,   0,   0,   0,   1,   0,   1,   0,
    217, 103, 243,  75,  50, 191, 135, 180,
      1,   0,   7,   0,   0,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 115,  77,
    115, 103,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,  67,  80,  85,  88,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     32, 217,  71, 241, 171, 117,  51, 152,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115,  77, 101, 109,  88,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    113, 255, 103,   3, 164, 143, 241, 206,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115,  83, 112,  99,  88,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59, 105,  45,   8, 108,  86,  42, 145,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115,  78, 101, 116,  88,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     11, 140,  54, 228,  81,  15,  76, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b10759629e25715c = b_b10759629e25715c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b10759629e25715c[] = {
  &s_912a566c082d693b,
  &s_983375abf147d920,
  &s_a14c0f51e4368c0b,
  &s_cef18fa40367ff71,
};
static const uint16_t m_b10759629e25715c[] = {0, 1, 3, 2};
static const uint16_t i_b10759629e25715c[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_b10759629e25715c = {
  0xb10759629e25715c, b_b10759629e25715c.words, 77, d_b10759629e25715c, m_b10759629e25715c,
  4, 4, i_b10759629e25715c, nullptr, nullptr, { &s_b10759629e25715c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace riaps {
namespace deplo {

// ActorRegReq
#ifndef _MSC_VER
constexpr uint16_t ActorRegReq::_capnpPrivate::dataWordSize;
constexpr uint16_t ActorRegReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ActorRegReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ActorRegReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ActorRegReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ActorRegRep
#ifndef _MSC_VER
constexpr uint16_t ActorRegRep::_capnpPrivate::dataWordSize;
constexpr uint16_t ActorRegRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ActorRegRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ActorRegRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ActorRegRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceArg
#ifndef _MSC_VER
constexpr uint16_t DeviceArg::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceArg::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceArg::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceArg::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceArg::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceRegReq
#ifndef _MSC_VER
constexpr uint16_t DeviceRegReq::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceRegReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceRegReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceRegReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceRegReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceRegRep
#ifndef _MSC_VER
constexpr uint16_t DeviceRegRep::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceRegRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceRegRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceRegRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceRegRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceUnregReq
#ifndef _MSC_VER
constexpr uint16_t DeviceUnregReq::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceUnregReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceUnregReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceUnregReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceUnregReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceUnregRep
#ifndef _MSC_VER
constexpr uint16_t DeviceUnregRep::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceUnregRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceUnregRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceUnregRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceUnregRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeplReq
#ifndef _MSC_VER
constexpr uint16_t DeplReq::_capnpPrivate::dataWordSize;
constexpr uint16_t DeplReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeplReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeplReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeplReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeplRep
#ifndef _MSC_VER
constexpr uint16_t DeplRep::_capnpPrivate::dataWordSize;
constexpr uint16_t DeplRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeplRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeplRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeplRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ResCPUX
#ifndef _MSC_VER
constexpr uint16_t ResCPUX::_capnpPrivate::dataWordSize;
constexpr uint16_t ResCPUX::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ResCPUX::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ResCPUX::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ResCPUX::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ResMemX
#ifndef _MSC_VER
constexpr uint16_t ResMemX::_capnpPrivate::dataWordSize;
constexpr uint16_t ResMemX::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ResMemX::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ResMemX::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ResMemX::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ResSpcX
#ifndef _MSC_VER
constexpr uint16_t ResSpcX::_capnpPrivate::dataWordSize;
constexpr uint16_t ResSpcX::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ResSpcX::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ResSpcX::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ResSpcX::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ResNetX
#ifndef _MSC_VER
constexpr uint16_t ResNetX::_capnpPrivate::dataWordSize;
constexpr uint16_t ResNetX::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ResNetX::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ResNetX::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ResNetX::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ResMsg
#ifndef _MSC_VER
constexpr uint16_t ResMsg::_capnpPrivate::dataWordSize;
constexpr uint16_t ResMsg::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ResMsg::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ResMsg::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ResMsg::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

