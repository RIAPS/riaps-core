// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: devm.capnp

#include "devm.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<25> b_9c175f791298638b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139,  99, 152,  18, 121,  95,  23, 156,
     11,   0,   0,   0,   2,   0,   0,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  83, 116,  97, 116, 117,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 107,   0,   0,   0,   0,   0,   0,
    101, 114, 114,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c175f791298638b = b_9c175f791298638b.words;
#if !CAPNP_LITE
static const uint16_t m_9c175f791298638b[] = {1, 0};
const ::capnp::_::RawSchema s_9c175f791298638b = {
  0x9c175f791298638b, b_9c175f791298638b.words, 25, nullptr, m_9c175f791298638b,
  0, 2, nullptr, nullptr, nullptr, { &s_9c175f791298638b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Status_9c175f791298638b, 9c175f791298638b);
static const ::capnp::_::AlignedData<78> b_d53caeee6f622196 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    150,  33,  98, 111, 238, 174,  60, 213,
     11,   0,   0,   0,   1,   0,   1,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  65,  99, 116, 111, 114,
     82, 101, 103,  82, 101, 113,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 111, 114,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 100,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d53caeee6f622196 = b_d53caeee6f622196.words;
#if !CAPNP_LITE
static const uint16_t m_d53caeee6f622196[] = {2, 0, 3, 1};
static const uint16_t i_d53caeee6f622196[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d53caeee6f622196 = {
  0xd53caeee6f622196, b_d53caeee6f622196.words, 78, nullptr, m_d53caeee6f622196,
  0, 4, i_d53caeee6f622196, nullptr, nullptr, { &s_d53caeee6f622196, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_cfef7ece83278762 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     98, 135,  39, 131, 206, 126, 239, 207,
     11,   0,   0,   0,   1,   0,   1,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  65,  99, 116, 111, 114,
     82, 101, 103,  82, 101, 112,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    139,  99, 152,  18, 121,  95,  23, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cfef7ece83278762 = b_cfef7ece83278762.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cfef7ece83278762[] = {
  &s_9c175f791298638b,
};
static const uint16_t m_cfef7ece83278762[] = {1, 0};
static const uint16_t i_cfef7ece83278762[] = {0, 1};
const ::capnp::_::RawSchema s_cfef7ece83278762 = {
  0xcfef7ece83278762, b_cfef7ece83278762.words, 47, d_cfef7ece83278762, m_cfef7ece83278762,
  1, 2, i_cfef7ece83278762, nullptr, nullptr, { &s_cfef7ece83278762, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_9f0892d464aa7b25 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     37, 123, 170, 100, 212, 146,   8, 159,
     11,   0,   0,   0,   1,   0,   0,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  68, 101, 118, 105,  99,
    101,  65, 114, 103,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f0892d464aa7b25 = b_9f0892d464aa7b25.words;
#if !CAPNP_LITE
static const uint16_t m_9f0892d464aa7b25[] = {0, 1};
static const uint16_t i_9f0892d464aa7b25[] = {0, 1};
const ::capnp::_::RawSchema s_9f0892d464aa7b25 = {
  0x9f0892d464aa7b25, b_9f0892d464aa7b25.words, 47, nullptr, m_9f0892d464aa7b25,
  0, 2, i_9f0892d464aa7b25, nullptr, nullptr, { &s_9f0892d464aa7b25, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<84> b_e2169fc4c006373b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59,  55,   6, 192, 196, 159,  22, 226,
     11,   0,   0,   0,   1,   0,   0,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  68, 101, 118, 105,  99,
    101,  82, 101, 103,  82, 101, 113,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  65, 114,
    103, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     37, 123, 170, 100, 212, 146,   8, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e2169fc4c006373b = b_e2169fc4c006373b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e2169fc4c006373b[] = {
  &s_9f0892d464aa7b25,
};
static const uint16_t m_e2169fc4c006373b[] = {0, 3, 1, 2};
static const uint16_t i_e2169fc4c006373b[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_e2169fc4c006373b = {
  0xe2169fc4c006373b, b_e2169fc4c006373b.words, 84, d_e2169fc4c006373b, m_e2169fc4c006373b,
  1, 4, i_e2169fc4c006373b, nullptr, nullptr, { &s_e2169fc4c006373b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_f4547e24ccdcf2e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 242, 220, 204,  36, 126,  84, 244,
     11,   0,   0,   0,   1,   0,   1,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  68, 101, 118, 105,  99,
    101,  82, 101, 103,  82, 101, 112,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    139,  99, 152,  18, 121,  95,  23, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f4547e24ccdcf2e6 = b_f4547e24ccdcf2e6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f4547e24ccdcf2e6[] = {
  &s_9c175f791298638b,
};
static const uint16_t m_f4547e24ccdcf2e6[] = {0};
static const uint16_t i_f4547e24ccdcf2e6[] = {0};
const ::capnp::_::RawSchema s_f4547e24ccdcf2e6 = {
  0xf4547e24ccdcf2e6, b_f4547e24ccdcf2e6.words, 32, d_f4547e24ccdcf2e6, m_f4547e24ccdcf2e6,
  1, 1, i_f4547e24ccdcf2e6, nullptr, nullptr, { &s_f4547e24ccdcf2e6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_eaae87f791c899ba = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    186, 153, 200, 145, 247, 135, 174, 234,
     11,   0,   0,   0,   1,   0,   0,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  68, 101, 118, 105,  99,
    101,  85, 110, 114, 101, 103,  82, 101,
    113,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eaae87f791c899ba = b_eaae87f791c899ba.words;
#if !CAPNP_LITE
static const uint16_t m_eaae87f791c899ba[] = {0, 1, 2};
static const uint16_t i_eaae87f791c899ba[] = {0, 1, 2};
const ::capnp::_::RawSchema s_eaae87f791c899ba = {
  0xeaae87f791c899ba, b_eaae87f791c899ba.words, 65, nullptr, m_eaae87f791c899ba,
  0, 3, i_eaae87f791c899ba, nullptr, nullptr, { &s_eaae87f791c899ba, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_b42c5e8e27f58ef5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    245, 142, 245,  39, 142,  94,  44, 180,
     11,   0,   0,   0,   1,   0,   1,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  68, 101, 118, 105,  99,
    101,  85, 110, 114, 101, 103,  82, 101,
    112,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    139,  99, 152,  18, 121,  95,  23, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b42c5e8e27f58ef5 = b_b42c5e8e27f58ef5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b42c5e8e27f58ef5[] = {
  &s_9c175f791298638b,
};
static const uint16_t m_b42c5e8e27f58ef5[] = {0};
static const uint16_t i_b42c5e8e27f58ef5[] = {0};
const ::capnp::_::RawSchema s_b42c5e8e27f58ef5 = {
  0xb42c5e8e27f58ef5, b_b42c5e8e27f58ef5.words, 33, d_b42c5e8e27f58ef5, m_b42c5e8e27f58ef5,
  1, 1, i_b42c5e8e27f58ef5, nullptr, nullptr, { &s_b42c5e8e27f58ef5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_adba6a3660813a27 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     39,  58, 129,  96,  54, 106, 186, 173,
     11,   0,   0,   0,   1,   0,   1,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  68, 101, 118, 109,  82,
    101, 113,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 111, 114,  82, 101, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    150,  33,  98, 111, 238, 174,  60, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  82, 101,
    103,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59,  55,   6, 192, 196, 159,  22, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  85, 110,
    114, 101, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    186, 153, 200, 145, 247, 135, 174, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adba6a3660813a27 = b_adba6a3660813a27.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_adba6a3660813a27[] = {
  &s_d53caeee6f622196,
  &s_e2169fc4c006373b,
  &s_eaae87f791c899ba,
};
static const uint16_t m_adba6a3660813a27[] = {0, 1, 2};
static const uint16_t i_adba6a3660813a27[] = {0, 1, 2};
const ::capnp::_::RawSchema s_adba6a3660813a27 = {
  0xadba6a3660813a27, b_adba6a3660813a27.words, 65, d_adba6a3660813a27, m_adba6a3660813a27,
  3, 3, i_adba6a3660813a27, nullptr, nullptr, { &s_adba6a3660813a27, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_f80e51da568fcc15 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     21, 204, 143,  86, 218,  81,  14, 248,
     11,   0,   0,   0,   1,   0,   1,   0,
     19, 248,  12,  33, 119,  20, 182, 169,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 109,  46,  99,  97, 112,
    110, 112,  58,  68, 101, 118, 109,  82,
    101, 112,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 111, 114,  82, 101, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 135,  39, 131, 206, 126, 239, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  82, 101,
    103,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    230, 242, 220, 204,  36, 126,  84, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101,  85, 110,
    114, 101, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    245, 142, 245,  39, 142,  94,  44, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f80e51da568fcc15 = b_f80e51da568fcc15.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f80e51da568fcc15[] = {
  &s_b42c5e8e27f58ef5,
  &s_cfef7ece83278762,
  &s_f4547e24ccdcf2e6,
};
static const uint16_t m_f80e51da568fcc15[] = {0, 1, 2};
static const uint16_t i_f80e51da568fcc15[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f80e51da568fcc15 = {
  0xf80e51da568fcc15, b_f80e51da568fcc15.words, 65, d_f80e51da568fcc15, m_f80e51da568fcc15,
  3, 3, i_f80e51da568fcc15, nullptr, nullptr, { &s_f80e51da568fcc15, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// ActorRegReq
#ifndef _MSC_VER
constexpr uint16_t ActorRegReq::_capnpPrivate::dataWordSize;
constexpr uint16_t ActorRegReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ActorRegReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ActorRegReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ActorRegReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ActorRegRep
#ifndef _MSC_VER
constexpr uint16_t ActorRegRep::_capnpPrivate::dataWordSize;
constexpr uint16_t ActorRegRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ActorRegRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ActorRegRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ActorRegRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceArg
#ifndef _MSC_VER
constexpr uint16_t DeviceArg::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceArg::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceArg::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceArg::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceArg::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceRegReq
#ifndef _MSC_VER
constexpr uint16_t DeviceRegReq::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceRegReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceRegReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceRegReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceRegReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceRegRep
#ifndef _MSC_VER
constexpr uint16_t DeviceRegRep::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceRegRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceRegRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceRegRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceRegRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceUnregReq
#ifndef _MSC_VER
constexpr uint16_t DeviceUnregReq::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceUnregReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceUnregReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceUnregReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceUnregReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DeviceUnregRep
#ifndef _MSC_VER
constexpr uint16_t DeviceUnregRep::_capnpPrivate::dataWordSize;
constexpr uint16_t DeviceUnregRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DeviceUnregRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeviceUnregRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DeviceUnregRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DevmReq
#ifndef _MSC_VER
constexpr uint16_t DevmReq::_capnpPrivate::dataWordSize;
constexpr uint16_t DevmReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DevmReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DevmReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DevmReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DevmRep
#ifndef _MSC_VER
constexpr uint16_t DevmRep::_capnpPrivate::dataWordSize;
constexpr uint16_t DevmRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DevmRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DevmRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DevmRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


