// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: disco.capnp

#include "disco.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<25> b_aa15a59eb33a15c2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194,  21,  58, 179, 158, 165,  21, 170,
     12,   0,   0,   0,   2,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  83, 116,  97, 116,
    117, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 107,   0,   0,   0,   0,   0,   0,
    101, 114, 114,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aa15a59eb33a15c2 = b_aa15a59eb33a15c2.words;
#if !CAPNP_LITE
static const uint16_t m_aa15a59eb33a15c2[] = {1, 0};
const ::capnp::_::RawSchema s_aa15a59eb33a15c2 = {
  0xaa15a59eb33a15c2, b_aa15a59eb33a15c2.words, 25, nullptr, m_aa15a59eb33a15c2,
  0, 2, nullptr, nullptr, nullptr, { &s_aa15a59eb33a15c2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Status_aa15a59eb33a15c2, aa15a59eb33a15c2);
static const ::capnp::_::AlignedData<45> b_df6b25e50bc24b4b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     75,  75, 194,  11, 229,  37, 107, 223,
     12,   0,   0,   0,   2,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  75, 105, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
    112, 117,  98,   0,   0,   0,   0,   0,
    115, 117,  98,   0,   0,   0,   0,   0,
     99, 108, 116,   0,   0,   0,   0,   0,
    115, 114, 118,   0,   0,   0,   0,   0,
    114, 101, 113,   0,   0,   0,   0,   0,
    114, 101, 112,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_df6b25e50bc24b4b = b_df6b25e50bc24b4b.words;
#if !CAPNP_LITE
static const uint16_t m_df6b25e50bc24b4b[] = {3, 0, 1, 6, 5, 4, 2};
const ::capnp::_::RawSchema s_df6b25e50bc24b4b = {
  0xdf6b25e50bc24b4b, b_df6b25e50bc24b4b.words, 45, nullptr, m_df6b25e50bc24b4b,
  0, 7, nullptr, nullptr, nullptr, { &s_df6b25e50bc24b4b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Kind_df6b25e50bc24b4b, df6b25e50bc24b4b);
static const ::capnp::_::AlignedData<29> b_b772213e98ab2d6b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    107,  45, 171, 152,  62,  33, 114, 183,
     12,   0,   0,   0,   2,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  83,  99, 111, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
    103, 108, 111,  98,  97, 108,   0,   0,
    108, 111,  99,  97, 108,   0,   0,   0, }
};
::capnp::word const* const bp_b772213e98ab2d6b = b_b772213e98ab2d6b.words;
#if !CAPNP_LITE
static const uint16_t m_b772213e98ab2d6b[] = {1, 2, 0};
const ::capnp::_::RawSchema s_b772213e98ab2d6b = {
  0xb772213e98ab2d6b, b_b772213e98ab2d6b.words, 29, nullptr, m_b772213e98ab2d6b,
  0, 3, nullptr, nullptr, nullptr, { &s_b772213e98ab2d6b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Scope_b772213e98ab2d6b, b772213e98ab2d6b);
static const ::capnp::_::AlignedData<63> b_dd81ef2fce62e663 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99, 230,  98, 206,  47, 239, 129, 221,
     12,   0,   0,   0,   1,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  65,  99, 116, 111,
    114,  82, 101, 103,  82, 101, 113,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 111, 114,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dd81ef2fce62e663 = b_dd81ef2fce62e663.words;
#if !CAPNP_LITE
static const uint16_t m_dd81ef2fce62e663[] = {2, 0, 1};
static const uint16_t i_dd81ef2fce62e663[] = {0, 1, 2};
const ::capnp::_::RawSchema s_dd81ef2fce62e663 = {
  0xdd81ef2fce62e663, b_dd81ef2fce62e663.words, 63, nullptr, m_dd81ef2fce62e663,
  0, 3, i_dd81ef2fce62e663, nullptr, nullptr, { &s_dd81ef2fce62e663, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_e07ee9af7989d4c1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    193, 212, 137, 121, 175, 233, 126, 224,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  65,  99, 116, 111,
    114,  82, 101, 103,  82, 101, 112,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    194,  21,  58, 179, 158, 165,  21, 170,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e07ee9af7989d4c1 = b_e07ee9af7989d4c1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e07ee9af7989d4c1[] = {
  &s_aa15a59eb33a15c2,
};
static const uint16_t m_e07ee9af7989d4c1[] = {1, 0};
static const uint16_t i_e07ee9af7989d4c1[] = {0, 1};
const ::capnp::_::RawSchema s_e07ee9af7989d4c1 = {
  0xe07ee9af7989d4c1, b_e07ee9af7989d4c1.words, 47, d_e07ee9af7989d4c1, m_e07ee9af7989d4c1,
  1, 2, i_e07ee9af7989d4c1, nullptr, nullptr, { &s_e07ee9af7989d4c1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<77> b_e643a41a040909be = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    190,   9,   9,   4,  26, 164,  67, 230,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  80,  97, 116, 104,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 115, 103,  84, 121, 112, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     75,  75, 194,  11, 229,  37, 107, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 111, 112, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    107,  45, 171, 152,  62,  33, 114, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e643a41a040909be = b_e643a41a040909be.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e643a41a040909be[] = {
  &s_b772213e98ab2d6b,
  &s_df6b25e50bc24b4b,
};
static const uint16_t m_e643a41a040909be[] = {0, 2, 1, 3};
static const uint16_t i_e643a41a040909be[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_e643a41a040909be = {
  0xe643a41a040909be, b_e643a41a040909be.words, 77, d_e643a41a040909be, m_e643a41a040909be,
  2, 4, i_e643a41a040909be, nullptr, nullptr, { &s_e643a41a040909be, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_c1cbdb4d5d25d951 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     81, 217,  37,  93,  77, 219, 203, 193,
     12,   0,   0,   0,   1,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  67, 108, 105, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 111, 114,  72, 111, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 111, 114,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 115, 116,  97, 110,  99, 101,
     78,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c1cbdb4d5d25d951 = b_c1cbdb4d5d25d951.words;
#if !CAPNP_LITE
static const uint16_t m_c1cbdb4d5d25d951[] = {0, 1, 2, 3};
static const uint16_t i_c1cbdb4d5d25d951[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_c1cbdb4d5d25d951 = {
  0xc1cbdb4d5d25d951, b_c1cbdb4d5d25d951.words, 81, nullptr, m_c1cbdb4d5d25d951,
  0, 4, i_c1cbdb4d5d25d951, nullptr, nullptr, { &s_c1cbdb4d5d25d951, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_e3b69c956b458278 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    120, 130,  69, 107, 149, 156, 182, 227,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  83, 111,  99, 107,
    101, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 111, 115, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3b69c956b458278 = b_e3b69c956b458278.words;
#if !CAPNP_LITE
static const uint16_t m_e3b69c956b458278[] = {0, 1};
static const uint16_t i_e3b69c956b458278[] = {0, 1};
const ::capnp::_::RawSchema s_e3b69c956b458278 = {
  0xe3b69c956b458278, b_e3b69c956b458278.words, 47, nullptr, m_e3b69c956b458278,
  0, 2, i_e3b69c956b458278, nullptr, nullptr, { &s_e3b69c956b458278, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_80529beffe2767a4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    164, 103,  39, 254, 239, 155,  82, 128,
     12,   0,   0,   0,   1,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  83, 101, 114, 118,
    105,  99, 101,  82, 101, 103,  82, 101,
    113,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    190,   9,   9,   4,  26, 164,  67, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111,  99, 107, 101, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    120, 130,  69, 107, 149, 156, 182, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_80529beffe2767a4 = b_80529beffe2767a4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_80529beffe2767a4[] = {
  &s_e3b69c956b458278,
  &s_e643a41a040909be,
};
static const uint16_t m_80529beffe2767a4[] = {0, 1};
static const uint16_t i_80529beffe2767a4[] = {0, 1};
const ::capnp::_::RawSchema s_80529beffe2767a4 = {
  0x80529beffe2767a4, b_80529beffe2767a4.words, 48, d_80529beffe2767a4, m_80529beffe2767a4,
  2, 2, i_80529beffe2767a4, nullptr, nullptr, { &s_80529beffe2767a4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_e1cb78a8cff3ea30 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     48, 234, 243, 207, 168, 120, 203, 225,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  83, 101, 114, 118,
    105,  99, 101,  82, 101, 103,  82, 101,
    112,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    194,  21,  58, 179, 158, 165,  21, 170,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e1cb78a8cff3ea30 = b_e1cb78a8cff3ea30.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e1cb78a8cff3ea30[] = {
  &s_aa15a59eb33a15c2,
};
static const uint16_t m_e1cb78a8cff3ea30[] = {0};
static const uint16_t i_e1cb78a8cff3ea30[] = {0};
const ::capnp::_::RawSchema s_e1cb78a8cff3ea30 = {
  0xe1cb78a8cff3ea30, b_e1cb78a8cff3ea30.words, 33, d_e1cb78a8cff3ea30, m_e1cb78a8cff3ea30,
  1, 1, i_e1cb78a8cff3ea30, nullptr, nullptr, { &s_e1cb78a8cff3ea30, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_d2a0f3a3e8bebc5e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94, 188, 190, 232, 163, 243, 160, 210,
     12,   0,   0,   0,   1,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  83, 101, 114, 118,
    105,  99, 101,  76, 111, 111, 107, 117,
    112,  82, 101, 113,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    190,   9,   9,   4,  26, 164,  67, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     81, 217,  37,  93,  77, 219, 203, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d2a0f3a3e8bebc5e = b_d2a0f3a3e8bebc5e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d2a0f3a3e8bebc5e[] = {
  &s_c1cbdb4d5d25d951,
  &s_e643a41a040909be,
};
static const uint16_t m_d2a0f3a3e8bebc5e[] = {1, 0};
static const uint16_t i_d2a0f3a3e8bebc5e[] = {0, 1};
const ::capnp::_::RawSchema s_d2a0f3a3e8bebc5e = {
  0xd2a0f3a3e8bebc5e, b_d2a0f3a3e8bebc5e.words, 48, d_d2a0f3a3e8bebc5e, m_d2a0f3a3e8bebc5e,
  2, 2, i_d2a0f3a3e8bebc5e, nullptr, nullptr, { &s_d2a0f3a3e8bebc5e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_998280f9b0a23bc9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    201,  59, 162, 176, 249, 128, 130, 153,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  83, 101, 114, 118,
    105,  99, 101,  76, 111, 111, 107, 117,
    112,  82, 101, 112,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    194,  21,  58, 179, 158, 165,  21, 170,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111,  99, 107, 101, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    120, 130,  69, 107, 149, 156, 182, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_998280f9b0a23bc9 = b_998280f9b0a23bc9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_998280f9b0a23bc9[] = {
  &s_aa15a59eb33a15c2,
  &s_e3b69c956b458278,
};
static const uint16_t m_998280f9b0a23bc9[] = {1, 0};
static const uint16_t i_998280f9b0a23bc9[] = {0, 1};
const ::capnp::_::RawSchema s_998280f9b0a23bc9 = {
  0x998280f9b0a23bc9, b_998280f9b0a23bc9.words, 52, d_998280f9b0a23bc9, m_998280f9b0a23bc9,
  2, 2, i_998280f9b0a23bc9, nullptr, nullptr, { &s_998280f9b0a23bc9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_88610ca13bd9da6b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    107, 218, 217,  59, 161,  12,  97, 136,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 105, 115,  99,
    111,  85, 112, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
     99, 108, 105, 101, 110, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     81, 217,  37,  93,  77, 219, 203, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 111, 112, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    107,  45, 171, 152,  62,  33, 114, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111,  99, 107, 101, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    120, 130,  69, 107, 149, 156, 182, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_88610ca13bd9da6b = b_88610ca13bd9da6b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_88610ca13bd9da6b[] = {
  &s_b772213e98ab2d6b,
  &s_c1cbdb4d5d25d951,
  &s_e3b69c956b458278,
};
static const uint16_t m_88610ca13bd9da6b[] = {0, 1, 2};
static const uint16_t i_88610ca13bd9da6b[] = {0, 1, 2};
const ::capnp::_::RawSchema s_88610ca13bd9da6b = {
  0x88610ca13bd9da6b, b_88610ca13bd9da6b.words, 62, d_88610ca13bd9da6b, m_88610ca13bd9da6b,
  3, 3, i_88610ca13bd9da6b, nullptr, nullptr, { &s_88610ca13bd9da6b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_9b59f65915902dd4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    212,  45, 144,  21,  89, 246,  89, 155,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 105, 115,  99,
    111,  82, 101, 113,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 111, 114,  82, 101, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     99, 230,  98, 206,  47, 239, 129, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 105,  99, 101,  82,
    101, 103,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    164, 103,  39, 254, 239, 155,  82, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 105,  99, 101,  76,
    111, 111, 107, 117, 112,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     94, 188, 190, 232, 163, 243, 160, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9b59f65915902dd4 = b_9b59f65915902dd4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9b59f65915902dd4[] = {
  &s_80529beffe2767a4,
  &s_d2a0f3a3e8bebc5e,
  &s_dd81ef2fce62e663,
};
static const uint16_t m_9b59f65915902dd4[] = {0, 2, 1};
static const uint16_t i_9b59f65915902dd4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9b59f65915902dd4 = {
  0x9b59f65915902dd4, b_9b59f65915902dd4.words, 65, d_9b59f65915902dd4, m_9b59f65915902dd4,
  3, 3, i_9b59f65915902dd4, nullptr, nullptr, { &s_9b59f65915902dd4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_e469aa488cf1aac0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    192, 170, 241, 140,  72, 170, 105, 228,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 105, 115,  99,
    111,  82, 101, 112,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 111, 114,  82, 101, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    193, 212, 137, 121, 175, 233, 126, 224,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 105,  99, 101,  82,
    101, 103,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     48, 234, 243, 207, 168, 120, 203, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 105,  99, 101,  76,
    111, 111, 107, 117, 112,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    201,  59, 162, 176, 249, 128, 130, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e469aa488cf1aac0 = b_e469aa488cf1aac0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e469aa488cf1aac0[] = {
  &s_998280f9b0a23bc9,
  &s_e07ee9af7989d4c1,
  &s_e1cb78a8cff3ea30,
};
static const uint16_t m_e469aa488cf1aac0[] = {0, 2, 1};
static const uint16_t i_e469aa488cf1aac0[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e469aa488cf1aac0 = {
  0xe469aa488cf1aac0, b_e469aa488cf1aac0.words, 65, d_e469aa488cf1aac0, m_e469aa488cf1aac0,
  3, 3, i_e469aa488cf1aac0, nullptr, nullptr, { &s_e469aa488cf1aac0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_f1ffd165271c1fca = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    202,  31,  28,  39, 101, 209, 255, 241,
     12,   0,   0,   0,   1,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  80, 114, 111, 118,
    105, 100, 101, 114,  76, 105, 115, 116,
     85, 112, 100,  97, 116, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 118, 105, 100, 101, 114,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 101, 119, 118,  97, 108, 117, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f1ffd165271c1fca = b_f1ffd165271c1fca.words;
#if !CAPNP_LITE
static const uint16_t m_f1ffd165271c1fca[] = {1, 0};
static const uint16_t i_f1ffd165271c1fca[] = {0, 1};
const ::capnp::_::RawSchema s_f1ffd165271c1fca = {
  0xf1ffd165271c1fca, b_f1ffd165271c1fca.words, 54, nullptr, m_f1ffd165271c1fca,
  0, 2, i_f1ffd165271c1fca, nullptr, nullptr, { &s_f1ffd165271c1fca, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_fba7aaeced154282 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130,  66,  21, 237, 236, 170, 167, 251,
     12,   0,   0,   0,   1,   0,   0,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  80, 114, 111, 118,
    105, 100, 101, 114,  76, 105, 115, 116,
     71, 101, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    190,   9,   9,   4,  26, 164,  67, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     81, 217,  37,  93,  77, 219, 203, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 117, 108, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fba7aaeced154282 = b_fba7aaeced154282.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fba7aaeced154282[] = {
  &s_c1cbdb4d5d25d951,
  &s_e643a41a040909be,
};
static const uint16_t m_fba7aaeced154282[] = {1, 0, 2};
static const uint16_t i_fba7aaeced154282[] = {0, 1, 2};
const ::capnp::_::RawSchema s_fba7aaeced154282 = {
  0xfba7aaeced154282, b_fba7aaeced154282.words, 67, d_fba7aaeced154282, m_fba7aaeced154282,
  2, 3, i_fba7aaeced154282, nullptr, nullptr, { &s_fba7aaeced154282, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_f0d1b2dc7cdf6a2c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     44, 106, 223, 124, 220, 178, 209, 240,
     12,   0,   0,   0,   1,   0,   1,   0,
     27, 202,  24,   0, 160,  50, 182, 191,
      1,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111,  46,  99,  97,
    112, 110, 112,  58,  80, 114, 111, 118,
    105, 100, 101, 114,  76, 105, 115, 116,
     80, 117, 115, 104,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 118, 105, 100, 101, 114,
     85, 112, 100,  97, 116, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    202,  31,  28,  39, 101, 209, 255, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 118, 105, 100, 101, 114,
     71, 101, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  66,  21, 237, 236, 170, 167, 251,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f0d1b2dc7cdf6a2c = b_f0d1b2dc7cdf6a2c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f0d1b2dc7cdf6a2c[] = {
  &s_f1ffd165271c1fca,
  &s_fba7aaeced154282,
};
static const uint16_t m_f0d1b2dc7cdf6a2c[] = {1, 0};
static const uint16_t i_f0d1b2dc7cdf6a2c[] = {0, 1};
const ::capnp::_::RawSchema s_f0d1b2dc7cdf6a2c = {
  0xf0d1b2dc7cdf6a2c, b_f0d1b2dc7cdf6a2c.words, 50, d_f0d1b2dc7cdf6a2c, m_f0d1b2dc7cdf6a2c,
  2, 2, i_f0d1b2dc7cdf6a2c, nullptr, nullptr, { &s_f0d1b2dc7cdf6a2c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// ActorRegReq
#ifndef _MSC_VER
constexpr uint16_t ActorRegReq::_capnpPrivate::dataWordSize;
constexpr uint16_t ActorRegReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ActorRegReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ActorRegReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ActorRegReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ActorRegRep
#ifndef _MSC_VER
constexpr uint16_t ActorRegRep::_capnpPrivate::dataWordSize;
constexpr uint16_t ActorRegRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ActorRegRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ActorRegRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ActorRegRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Path
#ifndef _MSC_VER
constexpr uint16_t Path::_capnpPrivate::dataWordSize;
constexpr uint16_t Path::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Path::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Path::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Path::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Client
#ifndef _MSC_VER
constexpr uint16_t Client::_capnpPrivate::dataWordSize;
constexpr uint16_t Client::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Client::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Client::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Client::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Socket
#ifndef _MSC_VER
constexpr uint16_t Socket::_capnpPrivate::dataWordSize;
constexpr uint16_t Socket::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Socket::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Socket::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Socket::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ServiceRegReq
#ifndef _MSC_VER
constexpr uint16_t ServiceRegReq::_capnpPrivate::dataWordSize;
constexpr uint16_t ServiceRegReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ServiceRegReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ServiceRegReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ServiceRegReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ServiceRegRep
#ifndef _MSC_VER
constexpr uint16_t ServiceRegRep::_capnpPrivate::dataWordSize;
constexpr uint16_t ServiceRegRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ServiceRegRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ServiceRegRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ServiceRegRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ServiceLookupReq
#ifndef _MSC_VER
constexpr uint16_t ServiceLookupReq::_capnpPrivate::dataWordSize;
constexpr uint16_t ServiceLookupReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ServiceLookupReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ServiceLookupReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ServiceLookupReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ServiceLookupRep
#ifndef _MSC_VER
constexpr uint16_t ServiceLookupRep::_capnpPrivate::dataWordSize;
constexpr uint16_t ServiceLookupRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ServiceLookupRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ServiceLookupRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ServiceLookupRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DiscoUpd
#ifndef _MSC_VER
constexpr uint16_t DiscoUpd::_capnpPrivate::dataWordSize;
constexpr uint16_t DiscoUpd::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DiscoUpd::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DiscoUpd::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DiscoUpd::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DiscoReq
#ifndef _MSC_VER
constexpr uint16_t DiscoReq::_capnpPrivate::dataWordSize;
constexpr uint16_t DiscoReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DiscoReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DiscoReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DiscoReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DiscoRep
#ifndef _MSC_VER
constexpr uint16_t DiscoRep::_capnpPrivate::dataWordSize;
constexpr uint16_t DiscoRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DiscoRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DiscoRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DiscoRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ProviderListUpdate
#ifndef _MSC_VER
constexpr uint16_t ProviderListUpdate::_capnpPrivate::dataWordSize;
constexpr uint16_t ProviderListUpdate::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ProviderListUpdate::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ProviderListUpdate::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ProviderListUpdate::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ProviderListGet
#ifndef _MSC_VER
constexpr uint16_t ProviderListGet::_capnpPrivate::dataWordSize;
constexpr uint16_t ProviderListGet::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ProviderListGet::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ProviderListGet::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ProviderListGet::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ProviderListPush
#ifndef _MSC_VER
constexpr uint16_t ProviderListPush::_capnpPrivate::dataWordSize;
constexpr uint16_t ProviderListPush::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ProviderListPush::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ProviderListPush::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ProviderListPush::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



