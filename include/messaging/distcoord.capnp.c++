// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: distcoord.capnp

#include "distcoord.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<26> b_fce2365756d7b39d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    157, 179, 215,  86,  87,  54, 226, 252,
     16,   0,   0,   0,   2,   0,   0,   0,
     69,  25, 169,  50, 210, 204, 180, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     72, 101,  97, 114, 116,  66, 101,  97,
    116,  84, 121, 112, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 110, 103,   0,   0,   0,   0,
    112, 111, 110, 103,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fce2365756d7b39d = b_fce2365756d7b39d.words;
#if !CAPNP_LITE
static const uint16_t m_fce2365756d7b39d[] = {0, 1};
const ::capnp::_::RawSchema s_fce2365756d7b39d = {
  0xfce2365756d7b39d, b_fce2365756d7b39d.words, 26, nullptr, m_fce2365756d7b39d,
  0, 2, nullptr, nullptr, nullptr, { &s_fce2365756d7b39d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(HeartBeatType_fce2365756d7b39d, fce2365756d7b39d);
static const ::capnp::_::AlignedData<51> b_c7426d39bcaf282b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     43,  40, 175, 188,  57, 109,  66, 199,
     16,   0,   0,   0,   1,   0,   1,   0,
     69,  25, 169,  50, 210, 204, 180, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     71, 114, 111, 117, 112,  72, 101,  97,
    114, 116,  66, 101,  97, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 114, 116,  66, 101,  97,
    116,  84, 121, 112, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    157, 179, 215,  86,  87,  54, 226, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 117, 114,  99, 101,  67, 111,
    109, 112, 111, 110, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c7426d39bcaf282b = b_c7426d39bcaf282b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c7426d39bcaf282b[] = {
  &s_fce2365756d7b39d,
};
static const uint16_t m_c7426d39bcaf282b[] = {0, 1};
static const uint16_t i_c7426d39bcaf282b[] = {0, 1};
const ::capnp::_::RawSchema s_c7426d39bcaf282b = {
  0xc7426d39bcaf282b, b_c7426d39bcaf282b.words, 51, d_c7426d39bcaf282b, m_c7426d39bcaf282b,
  1, 2, i_c7426d39bcaf282b, nullptr, nullptr, { &s_c7426d39bcaf282b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<82> b_f33d21662bc326c4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196,  38, 195,  43, 102,  33,  61, 243,
     16,   0,   0,   0,   1,   0,   0,   0,
     69,  25, 169,  50, 210, 204, 180, 165,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     76, 101,  97, 100, 101, 114,  69, 108,
    101,  99, 116, 105, 111, 110,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    124, 113, 201, 148,  60,  65, 107, 138,
     17,   0,   0,   0,  98,   0,   0,   0,
     94, 223, 165,  48, 183, 238, 103, 250,
     17,   0,   0,   0, 146,   0,   0,   0,
    196, 227, 112,  68, 224, 113, 180, 245,
     21,   0,   0,   0, 146,   0,   0,   0,
     65, 112, 112, 101, 110, 100,  69, 110,
    116, 114, 121,   0,   0,   0,   0,   0,
     82, 101, 113, 117, 101, 115, 116,  70,
    111, 114,  86, 111, 116, 101,  82, 101,
    113,   0,   0,   0,   0,   0,   0,   0,
     82, 101, 113, 117, 101, 115, 116,  70,
    111, 114,  86, 111, 116, 101,  82, 101,
    112,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112, 101, 110, 100,  69, 110,
    116, 114, 121,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    124, 113, 201, 148,  60,  65, 107, 138,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116,  70,
    111, 114,  86, 111, 116, 101,  82, 101,
    113,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     94, 223, 165,  48, 183, 238, 103, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116,  70,
    111, 114,  86, 111, 116, 101,  82, 101,
    112,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    196, 227, 112,  68, 224, 113, 180, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f33d21662bc326c4 = b_f33d21662bc326c4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f33d21662bc326c4[] = {
  &s_8a6b413c94c9717c,
  &s_f5b471e04470e3c4,
  &s_fa67eeb730a5df5e,
};
static const uint16_t m_f33d21662bc326c4[] = {0, 2, 1};
static const uint16_t i_f33d21662bc326c4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f33d21662bc326c4 = {
  0xf33d21662bc326c4, b_f33d21662bc326c4.words, 82, d_f33d21662bc326c4, m_f33d21662bc326c4,
  3, 3, i_f33d21662bc326c4, nullptr, nullptr, { &s_f33d21662bc326c4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_8a6b413c94c9717c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    124, 113, 201, 148,  60,  65, 107, 138,
     31,   0,   0,   0,   1,   0,   1,   0,
    196,  38, 195,  43, 102,  33,  61, 243,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     76, 101,  97, 100, 101, 114,  69, 108,
    101,  99, 116, 105, 111, 110,  46,  65,
    112, 112, 101, 110, 100,  69, 110, 116,
    114, 121,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,  67, 111,
    109, 112, 111, 110, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 108, 101,  99, 116, 105, 111, 110,
     84, 101, 114, 109,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8a6b413c94c9717c = b_8a6b413c94c9717c.words;
#if !CAPNP_LITE
static const uint16_t m_8a6b413c94c9717c[] = {1, 0};
static const uint16_t i_8a6b413c94c9717c[] = {0, 1};
const ::capnp::_::RawSchema s_8a6b413c94c9717c = {
  0x8a6b413c94c9717c, b_8a6b413c94c9717c.words, 53, nullptr, m_8a6b413c94c9717c,
  0, 2, i_8a6b413c94c9717c, nullptr, nullptr, { &s_8a6b413c94c9717c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_fa67eeb730a5df5e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94, 223, 165,  48, 183, 238, 103, 250,
     31,   0,   0,   0,   1,   0,   1,   0,
    196,  38, 195,  43, 102,  33,  61, 243,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     76, 101,  97, 100, 101, 114,  69, 108,
    101,  99, 116, 105, 111, 110,  46,  82,
    101, 113, 117, 101, 115, 116,  70, 111,
    114,  86, 111, 116, 101,  82, 101, 113,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,  67, 111,
    109, 112, 111, 110, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 108, 101,  99, 116, 105, 111, 110,
     84, 101, 114, 109,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fa67eeb730a5df5e = b_fa67eeb730a5df5e.words;
#if !CAPNP_LITE
static const uint16_t m_fa67eeb730a5df5e[] = {1, 0};
static const uint16_t i_fa67eeb730a5df5e[] = {0, 1};
const ::capnp::_::RawSchema s_fa67eeb730a5df5e = {
  0xfa67eeb730a5df5e, b_fa67eeb730a5df5e.words, 54, nullptr, m_fa67eeb730a5df5e,
  0, 2, i_fa67eeb730a5df5e, nullptr, nullptr, { &s_fa67eeb730a5df5e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<70> b_f5b471e04470e3c4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196, 227, 112,  68, 224, 113, 180, 245,
     31,   0,   0,   0,   1,   0,   1,   0,
    196,  38, 195,  43, 102,  33,  61, 243,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     76, 101,  97, 100, 101, 114,  69, 108,
    101,  99, 116, 105, 111, 110,  46,  82,
    101, 113, 117, 101, 115, 116,  70, 111,
    114,  86, 111, 116, 101,  82, 101, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,  67, 111,
    109, 112, 111, 110, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 116, 101,  70, 111, 114,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 108, 101,  99, 116, 105, 111, 110,
     84, 101, 114, 109,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f5b471e04470e3c4 = b_f5b471e04470e3c4.words;
#if !CAPNP_LITE
static const uint16_t m_f5b471e04470e3c4[] = {2, 0, 1};
static const uint16_t i_f5b471e04470e3c4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f5b471e04470e3c4 = {
  0xf5b471e04470e3c4, b_f5b471e04470e3c4.words, 70, nullptr, m_f5b471e04470e3c4,
  0, 3, i_f5b471e04470e3c4, nullptr, nullptr, { &s_f5b471e04470e3c4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_f8333cb31aa809fa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    250,   9, 168,  26, 179,  60,  51, 248,
     16,   0,   0,   0,   1,   0,   0,   0,
     69,  25, 169,  50, 210, 204, 180, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     77, 101, 115, 115,  97, 103, 101,  84,
    111,  76, 101,  97, 100, 101, 114,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     28,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,  67, 111,
    109, 112, 111, 110, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f8333cb31aa809fa = b_f8333cb31aa809fa.words;
#if !CAPNP_LITE
static const uint16_t m_f8333cb31aa809fa[] = {0};
static const uint16_t i_f8333cb31aa809fa[] = {0};
const ::capnp::_::RawSchema s_f8333cb31aa809fa = {
  0xf8333cb31aa809fa, b_f8333cb31aa809fa.words, 35, nullptr, m_f8333cb31aa809fa,
  0, 1, i_f8333cb31aa809fa, nullptr, nullptr, { &s_f8333cb31aa809fa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_a0db9864a01ffc74 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    116, 252,  31, 160, 100, 152, 219, 160,
     16,   0,   0,   0,   1,   0,   0,   0,
     69,  25, 169,  50, 210, 204, 180, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     76, 101,  97, 100, 101, 114,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     28,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,  67, 111,
    109, 112, 111, 110, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0db9864a01ffc74 = b_a0db9864a01ffc74.words;
#if !CAPNP_LITE
static const uint16_t m_a0db9864a01ffc74[] = {0};
static const uint16_t i_a0db9864a01ffc74[] = {0};
const ::capnp::_::RawSchema s_a0db9864a01ffc74 = {
  0xa0db9864a01ffc74, b_a0db9864a01ffc74.words, 35, nullptr, m_a0db9864a01ffc74,
  0, 1, i_a0db9864a01ffc74, nullptr, nullptr, { &s_a0db9864a01ffc74, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<159> b_934fe15762c71e76 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
     16,   0,   0,   0,   1,   0,   1,   0,
     69,  25, 169,  50, 210, 204, 180, 165,
      3,   0,   7,   0,   0,   0,   4,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   1,   0,   1,   0,
    134, 130, 251, 160, 100,  77,  10, 136,
     49,   0,   0,   0, 130,   0,   0,   0,
    248, 189, 214, 158,   2, 224, 175, 169,
     49,   0,   0,   0, 138,   0,   0,   0,
    152, 179, 202, 186, 115, 172, 232, 131,
     53,   0,   0,   0,  42,   0,   0,   0,
     42, 243, 127,  95, 253,  12,  29, 195,
     49,   0,   0,   0,  74,   0,   0,   0,
    242,  33,  76, 156,   5, 249,  38, 171,
     49,   0,   0,   0, 122,   0,   0,   0,
    238, 171, 246,  95,  64, 163, 159, 185,
     49,   0,   0,   0,  98,   0,   0,   0,
     11, 110, 162,   0, 182,  25, 145, 147,
     49,   0,   0,   0,  74,   0,   0,   0,
     80, 114, 111, 112, 111, 115, 101,  84,
    111,  76, 101,  97, 100, 101, 114,   0,
     80, 114, 111, 112, 111, 115, 101,  84,
    111,  67, 108, 105, 101, 110, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     86, 111, 116, 101,   0,   0,   0,   0,
     65, 110, 110, 111, 117, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 105, 109, 101,  83, 121, 110,  99,
     67, 111, 111, 114, 100,  65,   0,   0,
     86, 111, 116, 101,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
     86, 111, 116, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 252, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,  67, 111,
    109, 112, 111, 110, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 116, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     11, 110, 162,   0, 182,  25, 145, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 112, 111, 115, 101,  84,
    111,  76, 101,  97, 100, 101, 114,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    134, 130, 251, 160, 100,  77,  10, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 112, 111, 115, 101,  84,
    111,  67, 108, 105, 101, 110, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    248, 189, 214, 158,   2, 224, 175, 169,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 116, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    152, 179, 202, 186, 115, 172, 232, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 110, 111, 117, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     42, 243, 127,  95, 253,  12,  29, 195,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 115, 121, 110,  99,  67, 111, 111,
    114, 100,  65,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242,  33,  76, 156,   5, 249,  38, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_934fe15762c71e76 = b_934fe15762c71e76.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_934fe15762c71e76[] = {
  &s_83e8ac73bacab398,
  &s_880a4d64a0fb8286,
  &s_939119b600a26e0b,
  &s_a9afe0029ed6bdf8,
  &s_ab26f9059c4c21f2,
  &s_c31d0cfd5f7ff32a,
};
static const uint16_t m_934fe15762c71e76[] = {5, 3, 2, 0, 6, 4, 1};
static const uint16_t i_934fe15762c71e76[] = {2, 3, 4, 5, 0, 1, 6};
const ::capnp::_::RawSchema s_934fe15762c71e76 = {
  0x934fe15762c71e76, b_934fe15762c71e76.words, 159, d_934fe15762c71e76, m_934fe15762c71e76,
  6, 7, i_934fe15762c71e76, nullptr, nullptr, { &s_934fe15762c71e76, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_880a4d64a0fb8286 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134, 130, 251, 160, 100,  77,  10, 136,
     26,   0,   0,   0,   1,   0,   0,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,  46,  80, 114, 111, 112, 111, 115,
    101,  84, 111,  76, 101,  97, 100, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 112, 111, 115, 101,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_880a4d64a0fb8286 = b_880a4d64a0fb8286.words;
#if !CAPNP_LITE
static const uint16_t m_880a4d64a0fb8286[] = {0};
static const uint16_t i_880a4d64a0fb8286[] = {0};
const ::capnp::_::RawSchema s_880a4d64a0fb8286 = {
  0x880a4d64a0fb8286, b_880a4d64a0fb8286.words, 36, nullptr, m_880a4d64a0fb8286,
  0, 1, i_880a4d64a0fb8286, nullptr, nullptr, { &s_880a4d64a0fb8286, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_a9afe0029ed6bdf8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248, 189, 214, 158,   2, 224, 175, 169,
     26,   0,   0,   0,   1,   0,   0,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,  46,  80, 114, 111, 112, 111, 115,
    101,  84, 111,  67, 108, 105, 101, 110,
    116, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 112, 111, 115, 101,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 100, 101, 114,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9afe0029ed6bdf8 = b_a9afe0029ed6bdf8.words;
#if !CAPNP_LITE
static const uint16_t m_a9afe0029ed6bdf8[] = {1, 0};
static const uint16_t i_a9afe0029ed6bdf8[] = {0, 1};
const ::capnp::_::RawSchema s_a9afe0029ed6bdf8 = {
  0xa9afe0029ed6bdf8, b_a9afe0029ed6bdf8.words, 52, nullptr, m_a9afe0029ed6bdf8,
  0, 2, i_a9afe0029ed6bdf8, nullptr, nullptr, { &s_a9afe0029ed6bdf8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_83e8ac73bacab398 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    152, 179, 202, 186, 115, 172, 232, 131,
     26,   0,   0,   0,   1,   0,   1,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,  46,  86, 111, 116, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 112, 111, 115, 101,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 116, 101,  82, 101, 115, 117,
    108, 116,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    238, 171, 246,  95,  64, 163, 159, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83e8ac73bacab398 = b_83e8ac73bacab398.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_83e8ac73bacab398[] = {
  &s_b99fa3405ff6abee,
};
static const uint16_t m_83e8ac73bacab398[] = {0, 1};
static const uint16_t i_83e8ac73bacab398[] = {0, 1};
const ::capnp::_::RawSchema s_83e8ac73bacab398 = {
  0x83e8ac73bacab398, b_83e8ac73bacab398.words, 50, d_83e8ac73bacab398, m_83e8ac73bacab398,
  1, 2, i_83e8ac73bacab398, nullptr, nullptr, { &s_83e8ac73bacab398, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_c31d0cfd5f7ff32a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     42, 243, 127,  95, 253,  12,  29, 195,
     26,   0,   0,   0,   1,   0,   1,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,  46,  65, 110, 110, 111, 117, 110,
     99, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 112, 111, 115, 101,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 116, 101,  82, 101, 115, 117,
    108, 116,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    238, 171, 246,  95,  64, 163, 159, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c31d0cfd5f7ff32a = b_c31d0cfd5f7ff32a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c31d0cfd5f7ff32a[] = {
  &s_b99fa3405ff6abee,
};
static const uint16_t m_c31d0cfd5f7ff32a[] = {0, 1};
static const uint16_t i_c31d0cfd5f7ff32a[] = {0, 1};
const ::capnp::_::RawSchema s_c31d0cfd5f7ff32a = {
  0xc31d0cfd5f7ff32a, b_c31d0cfd5f7ff32a.words, 51, d_c31d0cfd5f7ff32a, m_c31d0cfd5f7ff32a,
  1, 2, i_c31d0cfd5f7ff32a, nullptr, nullptr, { &s_c31d0cfd5f7ff32a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_ab26f9059c4c21f2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    242,  33,  76, 156,   5, 249,  38, 171,
     26,   0,   0,   0,   1,   0,   0,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,  46,  84, 105, 109, 101,  83, 121,
    110,  99,  67, 111, 111, 114, 100,  65,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    247,  92, 243,  95,  36, 130, 139, 202,
      1,   0,   0,   0,  74,   0,   0,   0,
     84, 105, 109, 101,  83, 112, 101,  99,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 105, 111, 110,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    247,  92, 243,  95,  36, 130, 139, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ab26f9059c4c21f2 = b_ab26f9059c4c21f2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ab26f9059c4c21f2[] = {
  &s_ca8b82245ff35cf7,
};
static const uint16_t m_ab26f9059c4c21f2[] = {0, 1};
static const uint16_t i_ab26f9059c4c21f2[] = {0, 1};
const ::capnp::_::RawSchema s_ab26f9059c4c21f2 = {
  0xab26f9059c4c21f2, b_ab26f9059c4c21f2.words, 55, d_ab26f9059c4c21f2, m_ab26f9059c4c21f2,
  1, 2, i_ab26f9059c4c21f2, nullptr, nullptr, { &s_ab26f9059c4c21f2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_ca8b82245ff35cf7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247,  92, 243,  95,  36, 130, 139, 202,
     41,   0,   0,   0,   1,   0,   1,   0,
    242,  33,  76, 156,   5, 249,  38, 171,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,  46,  84, 105, 109, 101,  83, 121,
    110,  99,  67, 111, 111, 114, 100,  65,
     46,  84, 105, 109, 101,  83, 112, 101,
     99,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 118,  83, 101,  99,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 118,  78, 115, 101,  99,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca8b82245ff35cf7 = b_ca8b82245ff35cf7.words;
#if !CAPNP_LITE
static const uint16_t m_ca8b82245ff35cf7[] = {1, 0};
static const uint16_t i_ca8b82245ff35cf7[] = {0, 1};
const ::capnp::_::RawSchema s_ca8b82245ff35cf7 = {
  0xca8b82245ff35cf7, b_ca8b82245ff35cf7.words, 51, nullptr, m_ca8b82245ff35cf7,
  0, 2, i_ca8b82245ff35cf7, nullptr, nullptr, { &s_ca8b82245ff35cf7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<29> b_b99fa3405ff6abee = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    238, 171, 246,  95,  64, 163, 159, 185,
     26,   0,   0,   0,   2,   0,   0,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,  46,  86, 111, 116, 101,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 112, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 106, 101,  99, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b99fa3405ff6abee = b_b99fa3405ff6abee.words;
#if !CAPNP_LITE
static const uint16_t m_b99fa3405ff6abee[] = {0, 1};
const ::capnp::_::RawSchema s_b99fa3405ff6abee = {
  0xb99fa3405ff6abee, b_b99fa3405ff6abee.words, 29, nullptr, m_b99fa3405ff6abee,
  0, 2, nullptr, nullptr, nullptr, { &s_b99fa3405ff6abee, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(VoteResults_b99fa3405ff6abee, b99fa3405ff6abee);
static const ::capnp::_::AlignedData<27> b_939119b600a26e0b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11, 110, 162,   0, 182,  25, 145, 147,
     26,   0,   0,   0,   2,   0,   0,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 115, 101, 110, 115, 117,
    115,  46,  86, 111, 116, 101,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     97,  99, 116, 105, 111, 110,   0,   0, }
};
::capnp::word const* const bp_939119b600a26e0b = b_939119b600a26e0b.words;
#if !CAPNP_LITE
static const uint16_t m_939119b600a26e0b[] = {1, 0};
const ::capnp::_::RawSchema s_939119b600a26e0b = {
  0x939119b600a26e0b, b_939119b600a26e0b.words, 27, nullptr, m_939119b600a26e0b,
  0, 2, nullptr, nullptr, nullptr, { &s_939119b600a26e0b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(VoteType_939119b600a26e0b, 939119b600a26e0b);
static const ::capnp::_::AlignedData<35> b_da85eb41ae25b2c9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    201, 178,  37, 174,  65, 235, 133, 218,
     16,   0,   0,   0,   1,   0,   0,   0,
     69,  25, 169,  50, 210, 204, 180, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     71, 114, 111, 117, 112,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     28,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,  67, 111,
    109, 112, 111, 110, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da85eb41ae25b2c9 = b_da85eb41ae25b2c9.words;
#if !CAPNP_LITE
static const uint16_t m_da85eb41ae25b2c9[] = {0};
static const uint16_t i_da85eb41ae25b2c9[] = {0};
const ::capnp::_::RawSchema s_da85eb41ae25b2c9 = {
  0xda85eb41ae25b2c9, b_da85eb41ae25b2c9.words, 35, nullptr, m_da85eb41ae25b2c9,
  0, 1, i_da85eb41ae25b2c9, nullptr, nullptr, { &s_da85eb41ae25b2c9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<114> b_8a25ecc657bf2ed3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211,  46, 191,  87, 198, 236,  37, 138,
     16,   0,   0,   0,   1,   0,   1,   0,
     69,  25, 169,  50, 210, 204, 180, 165,
      1,   0,   7,   0,   0,   0,   6,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  99, 111, 111, 114,
    100,  46,  99,  97, 112, 110, 112,  58,
     71, 114, 111, 117, 112,  73, 110, 116,
    101, 114, 110,  97, 108, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
    103, 114, 111, 117, 112,  72, 101,  97,
    114, 116,  66, 101,  97, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     43,  40, 175, 188,  57, 109,  66, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 100, 101, 114,  69, 108,
    101,  99, 116, 105, 111, 110,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    196,  38, 195,  43, 102,  33,  61, 243,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  84,
    111,  76, 101,  97, 100, 101, 114,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    250,   9, 168,  26, 179,  60,  51, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 115, 101, 110, 115, 117,
    115,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    118,  30, 199,  98,  87, 225,  79, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 114, 111, 117, 112,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    201, 178,  37, 174,  65, 235, 133, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 100, 101, 114,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 252,  31, 160, 100, 152, 219, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8a25ecc657bf2ed3 = b_8a25ecc657bf2ed3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8a25ecc657bf2ed3[] = {
  &s_934fe15762c71e76,
  &s_a0db9864a01ffc74,
  &s_c7426d39bcaf282b,
  &s_da85eb41ae25b2c9,
  &s_f33d21662bc326c4,
  &s_f8333cb31aa809fa,
};
static const uint16_t m_8a25ecc657bf2ed3[] = {3, 0, 4, 1, 5, 2};
static const uint16_t i_8a25ecc657bf2ed3[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_8a25ecc657bf2ed3 = {
  0x8a25ecc657bf2ed3, b_8a25ecc657bf2ed3.words, 114, d_8a25ecc657bf2ed3, m_8a25ecc657bf2ed3,
  6, 6, i_8a25ecc657bf2ed3, nullptr, nullptr, { &s_8a25ecc657bf2ed3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace riaps {
namespace distrcoord {

// GroupHeartBeat
constexpr uint16_t GroupHeartBeat::_capnpPrivate::dataWordSize;
constexpr uint16_t GroupHeartBeat::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GroupHeartBeat::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GroupHeartBeat::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// LeaderElection
constexpr uint16_t LeaderElection::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaderElection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind LeaderElection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaderElection::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// LeaderElection::AppendEntry
constexpr uint16_t LeaderElection::AppendEntry::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaderElection::AppendEntry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind LeaderElection::AppendEntry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaderElection::AppendEntry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// LeaderElection::RequestForVoteReq
constexpr uint16_t LeaderElection::RequestForVoteReq::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaderElection::RequestForVoteReq::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind LeaderElection::RequestForVoteReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaderElection::RequestForVoteReq::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// LeaderElection::RequestForVoteRep
constexpr uint16_t LeaderElection::RequestForVoteRep::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaderElection::RequestForVoteRep::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind LeaderElection::RequestForVoteRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaderElection::RequestForVoteRep::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MessageToLeader
constexpr uint16_t MessageToLeader::_capnpPrivate::dataWordSize;
constexpr uint16_t MessageToLeader::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MessageToLeader::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MessageToLeader::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// LeaderMessage
constexpr uint16_t LeaderMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaderMessage::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind LeaderMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaderMessage::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Consensus
constexpr uint16_t Consensus::_capnpPrivate::dataWordSize;
constexpr uint16_t Consensus::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Consensus::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Consensus::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Consensus::ProposeToLeader
constexpr uint16_t Consensus::ProposeToLeader::_capnpPrivate::dataWordSize;
constexpr uint16_t Consensus::ProposeToLeader::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Consensus::ProposeToLeader::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Consensus::ProposeToLeader::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Consensus::ProposeToClients
constexpr uint16_t Consensus::ProposeToClients::_capnpPrivate::dataWordSize;
constexpr uint16_t Consensus::ProposeToClients::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Consensus::ProposeToClients::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Consensus::ProposeToClients::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Consensus::Vote
constexpr uint16_t Consensus::Vote::_capnpPrivate::dataWordSize;
constexpr uint16_t Consensus::Vote::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Consensus::Vote::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Consensus::Vote::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Consensus::Announce
constexpr uint16_t Consensus::Announce::_capnpPrivate::dataWordSize;
constexpr uint16_t Consensus::Announce::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Consensus::Announce::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Consensus::Announce::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Consensus::TimeSyncCoordA
constexpr uint16_t Consensus::TimeSyncCoordA::_capnpPrivate::dataWordSize;
constexpr uint16_t Consensus::TimeSyncCoordA::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Consensus::TimeSyncCoordA::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Consensus::TimeSyncCoordA::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Consensus::TimeSyncCoordA::TimeSpec
constexpr uint16_t Consensus::TimeSyncCoordA::TimeSpec::_capnpPrivate::dataWordSize;
constexpr uint16_t Consensus::TimeSyncCoordA::TimeSpec::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Consensus::TimeSyncCoordA::TimeSpec::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Consensus::TimeSyncCoordA::TimeSpec::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GroupMessage
constexpr uint16_t GroupMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t GroupMessage::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GroupMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GroupMessage::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GroupInternals
constexpr uint16_t GroupInternals::_capnpPrivate::dataWordSize;
constexpr uint16_t GroupInternals::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GroupInternals::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GroupInternals::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

