// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: dc.capnp

#include "dc.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<28> b_d4d302581b177f3d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     61, 127,  23,  27,  88,   2, 211, 212,
      9,   0,   0,   0,   2,   0,   0,   0,
     60,   4, 135, 141, 193,  21, 156, 249,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  99,  46,  99,  97, 112, 110, 112,
     58,  86, 111, 116, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121, 101, 115,   0,   0,   0,   0,   0,
    110, 111,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 111, 117, 116,   0, }
};
::capnp::word const* const bp_d4d302581b177f3d = b_d4d302581b177f3d.words;
#if !CAPNP_LITE
static const uint16_t m_d4d302581b177f3d[] = {1, 2, 0};
const ::capnp::_::RawSchema s_d4d302581b177f3d = {
  0xd4d302581b177f3d, b_d4d302581b177f3d.words, 28, nullptr, m_d4d302581b177f3d,
  0, 3, nullptr, nullptr, nullptr, { &s_d4d302581b177f3d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Vote_d4d302581b177f3d, d4d302581b177f3d);
static const ::capnp::_::AlignedData<26> b_83e79a7db5f807de = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    222,   7, 248, 181, 125, 154, 231, 131,
      9,   0,   0,   0,   2,   0,   0,   0,
     60,   4, 135, 141, 193,  21, 156, 249,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  99,  46,  99,  97, 112, 110, 112,
     58,  86, 111, 116, 105, 110, 103,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 106, 111, 114, 105, 116, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 115, 101, 110, 115, 117,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83e79a7db5f807de = b_83e79a7db5f807de.words;
#if !CAPNP_LITE
static const uint16_t m_83e79a7db5f807de[] = {1, 0};
const ::capnp::_::RawSchema s_83e79a7db5f807de = {
  0x83e79a7db5f807de, b_83e79a7db5f807de.words, 26, nullptr, m_83e79a7db5f807de,
  0, 2, nullptr, nullptr, nullptr, { &s_83e79a7db5f807de, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Voting_83e79a7db5f807de, 83e79a7db5f807de);
static const ::capnp::_::AlignedData<25> b_a148363bdfa62809 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      9,  40, 166, 223,  59,  54,  72, 161,
      9,   0,   0,   0,   2,   0,   0,   0,
     60,   4, 135, 141, 193,  21, 156, 249,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  99,  46,  99,  97, 112, 110, 112,
     58,  83, 117,  98, 106, 101,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     97,  99, 116, 105, 111, 110,   0,   0, }
};
::capnp::word const* const bp_a148363bdfa62809 = b_a148363bdfa62809.words;
#if !CAPNP_LITE
static const uint16_t m_a148363bdfa62809[] = {1, 0};
const ::capnp::_::RawSchema s_a148363bdfa62809 = {
  0xa148363bdfa62809, b_a148363bdfa62809.words, 25, nullptr, m_a148363bdfa62809,
  0, 2, nullptr, nullptr, nullptr, { &s_a148363bdfa62809, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Subject_a148363bdfa62809, a148363bdfa62809);
static const ::capnp::_::AlignedData<122> b_dca384a0f4f51dc9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    201,  29, 245, 244, 160, 132, 163, 220,
      9,   0,   0,   0,   1,   0,   4,   0,
     60,   4, 135, 141, 193,  21, 156, 249,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  99,  46,  99,  97, 112, 110, 112,
     58,  82, 101, 113,  70, 111, 114,  86,
    111, 116, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
    116, 111, 112, 105,  99,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 102, 118,  73, 100,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    222,   7, 248, 181, 125, 154, 231, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98, 106, 101,  99, 116,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      9,  40, 166, 223,  59,  54,  72, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 108, 101,  97, 115, 101,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 114, 116, 101, 100,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 111, 117, 116,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dca384a0f4f51dc9 = b_dca384a0f4f51dc9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dca384a0f4f51dc9[] = {
  &s_83e79a7db5f807de,
  &s_a148363bdfa62809,
};
static const uint16_t m_dca384a0f4f51dc9[] = {2, 4, 1, 5, 3, 6, 0};
static const uint16_t i_dca384a0f4f51dc9[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_dca384a0f4f51dc9 = {
  0xdca384a0f4f51dc9, b_dca384a0f4f51dc9.words, 122, d_dca384a0f4f51dc9, m_dca384a0f4f51dc9,
  2, 7, i_dca384a0f4f51dc9, nullptr, nullptr, { &s_dca384a0f4f51dc9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_f2801db0c89e53db = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    219,  83, 158, 200, 176,  29, 128, 242,
      9,   0,   0,   0,   1,   0,   1,   0,
     60,   4, 135, 141, 193,  21, 156, 249,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  99,  46,  99,  97, 112, 110, 112,
     58,  82, 101, 112,  84, 111,  86, 111,
    116, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 102, 118,  73, 100,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 116, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     61, 127,  23,  27,  88,   2, 211, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f2801db0c89e53db = b_f2801db0c89e53db.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f2801db0c89e53db[] = {
  &s_d4d302581b177f3d,
};
static const uint16_t m_f2801db0c89e53db[] = {0, 1};
static const uint16_t i_f2801db0c89e53db[] = {0, 1};
const ::capnp::_::RawSchema s_f2801db0c89e53db = {
  0xf2801db0c89e53db, b_f2801db0c89e53db.words, 47, d_f2801db0c89e53db, m_f2801db0c89e53db,
  1, 2, i_f2801db0c89e53db, nullptr, nullptr, { &s_f2801db0c89e53db, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_86abc6e859e85c21 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     33,  92, 232,  89, 232, 198, 171, 134,
      9,   0,   0,   0,   1,   0,   1,   0,
     60,   4, 135, 141, 193,  21, 156, 249,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  99,  46,  99,  97, 112, 110, 112,
     58,  65, 110, 110, 111, 117, 110,  99,
    101,  86, 111, 116, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 102, 118,  73, 100,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 116, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     61, 127,  23,  27,  88,   2, 211, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_86abc6e859e85c21 = b_86abc6e859e85c21.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_86abc6e859e85c21[] = {
  &s_d4d302581b177f3d,
};
static const uint16_t m_86abc6e859e85c21[] = {0, 1};
static const uint16_t i_86abc6e859e85c21[] = {0, 1};
const ::capnp::_::RawSchema s_86abc6e859e85c21 = {
  0x86abc6e859e85c21, b_86abc6e859e85c21.words, 47, d_86abc6e859e85c21, m_86abc6e859e85c21,
  1, 2, i_86abc6e859e85c21, nullptr, nullptr, { &s_86abc6e859e85c21, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_beef6d7a502eec86 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134, 236,  46,  80, 122, 109, 239, 190,
      9,   0,   0,   0,   1,   0,   1,   0,
     60,   4, 135, 141, 193,  21, 156, 249,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  99,  46,  99,  97, 112, 110, 112,
     58,  71, 114, 111, 117, 112,  86, 111,
    116, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    114, 102, 118,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    201,  29, 245, 244, 160, 132, 163, 220,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 116,  99,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    219,  83, 158, 200, 176,  29, 128, 242,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     33,  92, 232,  89, 232, 198, 171, 134,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_beef6d7a502eec86 = b_beef6d7a502eec86.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_beef6d7a502eec86[] = {
  &s_86abc6e859e85c21,
  &s_dca384a0f4f51dc9,
  &s_f2801db0c89e53db,
};
static const uint16_t m_beef6d7a502eec86[] = {2, 0, 1};
static const uint16_t i_beef6d7a502eec86[] = {0, 1, 2};
const ::capnp::_::RawSchema s_beef6d7a502eec86 = {
  0xbeef6d7a502eec86, b_beef6d7a502eec86.words, 62, d_beef6d7a502eec86, m_beef6d7a502eec86,
  3, 3, i_beef6d7a502eec86, nullptr, nullptr, { &s_beef6d7a502eec86, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace riaps {
namespace groups {
namespace poll {

// ReqForVote
constexpr uint16_t ReqForVote::_capnpPrivate::dataWordSize;
constexpr uint16_t ReqForVote::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ReqForVote::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ReqForVote::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// RepToVote
constexpr uint16_t RepToVote::_capnpPrivate::dataWordSize;
constexpr uint16_t RepToVote::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind RepToVote::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RepToVote::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// AnnounceVote
constexpr uint16_t AnnounceVote::_capnpPrivate::dataWordSize;
constexpr uint16_t AnnounceVote::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AnnounceVote::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AnnounceVote::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GroupVote
constexpr uint16_t GroupVote::_capnpPrivate::dataWordSize;
constexpr uint16_t GroupVote::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GroupVote::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GroupVote::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

