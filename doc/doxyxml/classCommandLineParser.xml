<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classCommandLineParser" kind="class" language="C++" prot="public">
    <compoundname>CommandLineParser</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCommandLineParser_1adb54c8dc5af9cee01eb50945d3e851de" prot="private" static="no" mutable="no">
        <type>char **</type>
        <definition>char** CommandLineParser::_argv</definition>
        <argsstring></argsstring>
        <name>_argv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="65" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCommandLineParser_1a1c04929f1fa4a539ab47e14e374d31fb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CommandLineParser::_argc</definition>
        <argsstring></argsstring>
        <name>_argc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="66" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCommandLineParser_1a2b2d71fc44ad6248663f80468f572806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CommandLineParser::CommandLineParser</definition>
        <argsstring>(char **argv, int argc)</argsstring>
        <name>CommandLineParser</name>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the RIAPS model file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actorName</parametername>
</parameternamelist>
<parameterdescription>
<para>The actor to be parsed from the model file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCommandLineParser_1a028c03975698802a43a1f08c53d0a7e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CommandLineParser::ParseActorParams</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; &amp;actualParams, std::string &amp;appName, std::string &amp;actorName, std::string &amp;modelFile, nlohmann::json &amp;jsonConfig)</argsstring>
        <name>ParseActorParams</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>actualParams</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>appName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>actorName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>modelFile</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCommandLineParser_1a684ed150a0b424b650f70cfa0cecf138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CommandLineParser::ParseDeviceParams</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; &amp;actualParams, std::string &amp;appName, std::string &amp;deviceName, std::string &amp;modelFile, nlohmann::json &amp;jsonConfig)</argsstring>
        <name>ParseDeviceParams</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>actualParams</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>appName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>deviceName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>modelFile</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCommandLineParser_1af4064b3f78b078e459c735e753c1d53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CommandLineParser::~CommandLineParser</definition>
        <argsstring>()</argsstring>
        <name>~CommandLineParser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classCommandLineParser_1a92269db4f6bc555ff93ab9769f9070e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool CommandLineParser::CommandOptionExists</definition>
        <argsstring>(char **begin, char **end, const std::string &amp;option)</argsstring>
        <name>CommandOptionExists</name>
        <param>
          <type>char **</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCommandLineParser_1aff234dc1d26aab6028e32544b4cb0d83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CommandLineParser::Parse</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; &amp;actualParams, std::string &amp;appName, std::string &amp;actorName, std::string &amp;modelFile, nlohmann::json &amp;jsonConfig)</argsstring>
        <name>Parse</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>actualParams</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>appName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>actorName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>modelFile</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads the JSON file</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actualParams</parametername>
</parameternamelist>
<parameterdescription>
<para>out Contains the commandline parameters in key-value format. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actorName</parametername>
</parameternamelist>
<parameterdescription>
<para>out The actor name, parsed from commandline arguments. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jsonConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>out The model file content, parsed into JSON object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="59" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" line="21" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_commandlineparser.h" bodystart="21" bodyend="67"/>
    <listofallmembers>
      <member refid="classCommandLineParser_1a1c04929f1fa4a539ab47e14e374d31fb" prot="private" virt="non-virtual"><scope>CommandLineParser</scope><name>_argc</name></member>
      <member refid="classCommandLineParser_1adb54c8dc5af9cee01eb50945d3e851de" prot="private" virt="non-virtual"><scope>CommandLineParser</scope><name>_argv</name></member>
      <member refid="classCommandLineParser_1a2b2d71fc44ad6248663f80468f572806" prot="public" virt="non-virtual"><scope>CommandLineParser</scope><name>CommandLineParser</name></member>
      <member refid="classCommandLineParser_1a92269db4f6bc555ff93ab9769f9070e6" prot="public" virt="non-virtual"><scope>CommandLineParser</scope><name>CommandOptionExists</name></member>
      <member refid="classCommandLineParser_1aff234dc1d26aab6028e32544b4cb0d83" prot="private" virt="non-virtual"><scope>CommandLineParser</scope><name>Parse</name></member>
      <member refid="classCommandLineParser_1a028c03975698802a43a1f08c53d0a7e9" prot="public" virt="non-virtual"><scope>CommandLineParser</scope><name>ParseActorParams</name></member>
      <member refid="classCommandLineParser_1a684ed150a0b424b650f70cfa0cecf138" prot="public" virt="non-virtual"><scope>CommandLineParser</scope><name>ParseDeviceParams</name></member>
      <member refid="classCommandLineParser_1af4064b3f78b078e459c735e753c1d53f" prot="public" virt="non-virtual"><scope>CommandLineParser</scope><name>~CommandLineParser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
