<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classriaps_1_1components_1_1DeviceThread" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>riaps::components::DeviceThread</compoundname>
    <includes refid="r__devicethread_8h" local="no">r_devicethread.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classriaps_1_1components_1_1DeviceThread_1a0d494320b879872068b6292b6d374f69" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; spdlog::logger &gt;</type>
        <definition>std::shared_ptr&lt;spdlog::logger&gt; riaps::components::DeviceThread::_logger</definition>
        <argsstring></argsstring>
        <name>_logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="60" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classriaps_1_1components_1_1DeviceThread_1a1eec01849e734db854920d927843e017" prot="private" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread riaps::components::DeviceThread::_deviceThread</definition>
        <argsstring></argsstring>
        <name>_deviceThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="63" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classriaps_1_1components_1_1DeviceThread_1a0dc992de6e6329bdb0346b02e1a95109" prot="private" static="no" mutable="no">
        <type>const <ref refid="structcomponent__conf" kindref="compound">_component_conf</ref> &amp;</type>
        <definition>const _component_conf&amp; riaps::components::DeviceThread::_deviceConfig</definition>
        <argsstring></argsstring>
        <name>_deviceConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="64" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classriaps_1_1components_1_1DeviceThread_1a13795449aa0e156c4c4f55e7b45d59cc" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::unique_ptr&lt; <ref refid="classriaps_1_1ports_1_1PortBase" kindref="compound">ports::PortBase</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::unique_ptr&lt;ports::PortBase&gt; &gt; riaps::components::DeviceThread::_insidePorts</definition>
        <argsstring></argsstring>
        <name>_insidePorts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="65" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classriaps_1_1components_1_1DeviceThread_1a1d15da3481788025f4357b8d8a2934ac" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; riaps::components::DeviceThread::_isTerminated</definition>
        <argsstring></argsstring>
        <name>_isTerminated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="66" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classriaps_1_1components_1_1DeviceThread_1af1170af1be41e82e48d5b16b64803af3" prot="private" static="no" mutable="no">
        <type>zpoller_t *</type>
        <definition>zpoller_t* riaps::components::DeviceThread::_poller</definition>
        <argsstring></argsstring>
        <name>_poller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="68" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a3c05d12695bcf7e63866603903fc2e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>riaps::components::DeviceThread::DeviceThread</definition>
        <argsstring>(const _component_conf &amp;deviceConfig)</argsstring>
        <name>DeviceThread</name>
        <param>
          <type>const <ref refid="structcomponent__conf" kindref="compound">_component_conf</ref> &amp;</type>
          <declname>deviceConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a1c32aafa35eac2c8425aea60f2a858f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classriaps_1_1ports_1_1InsidePort" kindref="compound">riaps::ports::InsidePort</ref> *</type>
        <definition>riaps::ports::InsidePort* riaps::components::DeviceThread::GetInsidePortByName</definition>
        <argsstring>(const std::string &amp;portName)</argsstring>
        <name>GetInsidePortByName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a46f2297f1c12be0a3d498c4280ca5823" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void riaps::components::DeviceThread::Run</definition>
        <argsstring>()=0</argsstring>
        <name>Run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a98a8a3a3dc213e654da7d0dc04b3cfe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riaps::components::DeviceThread::StartThread</definition>
        <argsstring>()</argsstring>
        <name>StartThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a0290ea76867476e72ba8aa52315cffa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riaps::components::DeviceThread::Terminate</definition>
        <argsstring>()</argsstring>
        <name>Terminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a5e0f9bdf740df7587bc99e57092a4c38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool riaps::components::DeviceThread::IsTerminated</definition>
        <argsstring>() const </argsstring>
        <name>IsTerminated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a511b6cb0d9ee711ad5d57bd4ca3c337e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual riaps::components::DeviceThread::~DeviceThread</definition>
        <argsstring>()</argsstring>
        <name>~DeviceThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a698bc30dbb4ad2310653a7f5c983ea93" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riaps::components::DeviceThread::InitInsides</definition>
        <argsstring>()</argsstring>
        <name>InitInsides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a4c442fcdce69d1db3854514bc7ea7150" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* riaps::components::DeviceThread::PollDeviceThreadPorts</definition>
        <argsstring>(int timeout)</argsstring>
        <name>PollDeviceThreadPorts</name>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Polls the registered inside ports for input data. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Poller timeout in msec. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ZMQ socket, where the input data is waiting for recv() call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a5c099d291e784e5a4a9312f951ddf55e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riaps::components::DeviceThread::AddSocketToPoller</definition>
        <argsstring>(const zsock_t *socket)</argsstring>
        <name>AddSocketToPoller</name>
        <param>
          <type>const zsock_t *</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classriaps_1_1components_1_1DeviceThread_1a64568ebbe57762319a30b61329342e39" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool riaps::components::DeviceThread::SendMessageOnPort</definition>
        <argsstring>(capnp::MallocMessageBuilder &amp;message, const std::string &amp;portName)</argsstring>
        <name>SendMessageOnPort</name>
        <param>
          <type>capnp::MallocMessageBuilder &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for all device threads </para>    </detaileddescription>
    <location file="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" line="23" column="1" bodyfile="/home/istvan/work/riaps-core/include/componentmodel/r_devicethread.h" bodystart="23" bodyend="69"/>
    <listofallmembers>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a0dc992de6e6329bdb0346b02e1a95109" prot="private" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>_deviceConfig</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a1eec01849e734db854920d927843e017" prot="private" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>_deviceThread</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a13795449aa0e156c4c4f55e7b45d59cc" prot="private" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>_insidePorts</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a1d15da3481788025f4357b8d8a2934ac" prot="private" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>_isTerminated</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a0d494320b879872068b6292b6d374f69" prot="protected" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>_logger</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1af1170af1be41e82e48d5b16b64803af3" prot="private" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>_poller</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a5c099d291e784e5a4a9312f951ddf55e" prot="protected" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>AddSocketToPoller</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a3c05d12695bcf7e63866603903fc2e3e" prot="public" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>DeviceThread</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a1c32aafa35eac2c8425aea60f2a858f2" prot="public" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>GetInsidePortByName</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a698bc30dbb4ad2310653a7f5c983ea93" prot="protected" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>InitInsides</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a5e0f9bdf740df7587bc99e57092a4c38" prot="public" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>IsTerminated</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a4c442fcdce69d1db3854514bc7ea7150" prot="protected" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>PollDeviceThreadPorts</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a46f2297f1c12be0a3d498c4280ca5823" prot="public" virt="pure-virtual"><scope>riaps::components::DeviceThread</scope><name>Run</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a64568ebbe57762319a30b61329342e39" prot="protected" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>SendMessageOnPort</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a98a8a3a3dc213e654da7d0dc04b3cfe1" prot="public" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>StartThread</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a0290ea76867476e72ba8aa52315cffa1" prot="public" virt="non-virtual"><scope>riaps::components::DeviceThread</scope><name>Terminate</name></member>
      <member refid="classriaps_1_1components_1_1DeviceThread_1a511b6cb0d9ee711ad5d57bd4ca3c337e" prot="public" virt="virtual"><scope>riaps::components::DeviceThread</scope><name>~DeviceThread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
