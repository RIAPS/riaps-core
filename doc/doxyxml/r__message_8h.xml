<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="r__message_8h" kind="file" language="C++">
    <compoundname>r_message.h</compoundname>
    <includes local="no">czmq.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="1965">
        <label>czmq.h</label>
      </node>
      <node id="1966">
        <label>string</label>
      </node>
      <node id="1964">
        <label>/home/istvan/work/riaps-core/include/utils/r_message.h</label>
        <link refid="r_message.h"/>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1967" relation="include">
        </childnode>
      </node>
      <node id="1967">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct__service__details" prot="public">_service_details</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="r__message_8h_1ab97910cdbeddf3026812cc50bb884397" prot="public" static="no">
        <type>struct <ref refid="struct__service__details" kindref="compound">_service_details</ref></type>
        <definition>typedef struct _service_details service_details</definition>
        <argsstring></argsstring>
        <name>service_details</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/utils/r_message.h" line="78" column="1" bodyfile="/home/istvan/work/riaps-core/include/utils/r_message.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="r__message_8h_1a3108bb70985ce0bc7b67d67d898d1bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void extract_zmsg</definition>
        <argsstring>(zmsg_t *msg, std::vector&lt; zmsg_t * &gt; &amp;msg_frames)</argsstring>
        <name>extract_zmsg</name>
        <param>
          <type>zmsg_t *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>std::vector&lt; zmsg_t * &gt; &amp;</type>
          <declname>msg_frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/utils/r_message.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="r__message_8h_1ac26e4ea09e2c22ec12c719d0e7367399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void extract_params</definition>
        <argsstring>(zmsg_t *msg, std::vector&lt; std::string &gt; &amp;params)</argsstring>
        <name>extract_params</name>
        <param>
          <type>zmsg_t *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/utils/r_message.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="r__message_8h_1aea5b60dc2806f1b99326891c2656aeef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool params_to_service_details</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;params, service_details &amp;service_structure)</argsstring>
        <name>params_to_service_details</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="struct__service__details" kindref="compound">service_details</ref> &amp;</type>
          <declname>service_structure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/utils/r_message.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="r__message_8h_1a817cdae11f07f931593b24ddfc04592f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void service_details_to_zmsg</definition>
        <argsstring>(service_details &amp;current_service, zmsg_t *msg)</argsstring>
        <name>service_details_to_zmsg</name>
        <param>
          <type><ref refid="struct__service__details" kindref="compound">service_details</ref> &amp;</type>
          <declname>current_service</declname>
        </param>
        <param>
          <type>zmsg_t *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/istvan/work/riaps-core/include/utils/r_message.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>R_MESSAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R_MESSAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;czmq.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="struct__service__details" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__service__details" kindref="compound">_service_details</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service_id<sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service_name<sp/>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_address<sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>tags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<sp/><ref refid="struct__service__details" kindref="compound">_service_details</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs<sp/>){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(service_name<sp/>==<sp/>rhs.service_name<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_address<sp/><sp/><sp/>==<sp/>rhs.ip_address<sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>rhs.port<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service_id<sp/><sp/><sp/>==<sp/>rhs.service_id){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__service__details" kindref="compound">_service_details</ref><sp/>service_details;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">extract_zmsg(zmsg_t*<sp/>msg,<sp/>std::vector&lt;zmsg_t*&gt;&amp;<sp/>msg_frames);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">extract_params(zmsg_t*<sp/>msg,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>params);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">params_to_service_details(std::vector&lt;std::string&gt;&amp;<sp/>params,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service_details&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service_structure);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">service_details_to_zmsg(service_details&amp;<sp/>current_service,<sp/>zmsg_t*<sp/>msg);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//_R_MESSAGE_H</highlight></codeline>
    </programlisting>
    <location file="/home/istvan/work/riaps-core/include/utils/r_message.h"/>
  </compounddef>
</doxygen>
