// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: timertest.capnp

#include "timertest.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_99254ce5e61770e4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    228, 112,  23, 230, 229,  76,  37, 153,
     16,   0,   0,   0,   1,   0,   2,   0,
     28, 186,  24,  16, 161,  19,  38, 191,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 114, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 105, 109, 101,  83, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 101,  99,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 115, 101,  99,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_99254ce5e61770e4 = b_99254ce5e61770e4.words;
#if !CAPNP_LITE
static const uint16_t m_99254ce5e61770e4[] = {1, 0};
static const uint16_t i_99254ce5e61770e4[] = {0, 1};
const ::capnp::_::RawSchema s_99254ce5e61770e4 = {
  0x99254ce5e61770e4, b_99254ce5e61770e4.words, 48, nullptr, m_99254ce5e61770e4,
  0, 2, i_99254ce5e61770e4, nullptr, nullptr, { &s_99254ce5e61770e4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_8e53206e30d94af8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248,  74, 217,  48, 110,  32,  83, 142,
     16,   0,   0,   0,   1,   0,   1,   0,
     28, 186,  24,  16, 161,  19,  38, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 114, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     83, 105, 103, 110,  97, 108,  86,  97,
    108, 117, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    228, 112,  23, 230, 229,  76,  37, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8e53206e30d94af8 = b_8e53206e30d94af8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8e53206e30d94af8[] = {
  &s_99254ce5e61770e4,
};
static const uint16_t m_8e53206e30d94af8[] = {1, 0};
static const uint16_t i_8e53206e30d94af8[] = {0, 1};
const ::capnp::_::RawSchema s_8e53206e30d94af8 = {
  0x8e53206e30d94af8, b_8e53206e30d94af8.words, 49, d_8e53206e30d94af8, m_8e53206e30d94af8,
  1, 2, i_8e53206e30d94af8, nullptr, nullptr, { &s_8e53206e30d94af8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace timertest {
namespace messages {

// TimeStamp
#ifndef _MSC_VER
constexpr uint16_t TimeStamp::_capnpPrivate::dataWordSize;
constexpr uint16_t TimeStamp::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind TimeStamp::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimeStamp::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* TimeStamp::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SignalValue
#ifndef _MSC_VER
constexpr uint16_t SignalValue::_capnpPrivate::dataWordSize;
constexpr uint16_t SignalValue::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SignalValue::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SignalValue::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SignalValue::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

