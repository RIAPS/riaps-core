// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: EchoIO.capnp

#include "EchoIO.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<32> b_cdc1da7fcdc7ae74 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    116, 174, 199, 205, 127, 218, 193, 205,
     13,   0,   0,   0,   1,   0,   0,   0,
     44, 203,  17,  32, 161,  65, 182, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,  99, 104, 111,  73,  79,  46,  99,
     97, 112, 110, 112,  58,  69,  99, 104,
    111,  82, 101, 113,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cdc1da7fcdc7ae74 = b_cdc1da7fcdc7ae74.words;
#if !CAPNP_LITE
static const uint16_t m_cdc1da7fcdc7ae74[] = {0};
static const uint16_t i_cdc1da7fcdc7ae74[] = {0};
const ::capnp::_::RawSchema s_cdc1da7fcdc7ae74 = {
  0xcdc1da7fcdc7ae74, b_cdc1da7fcdc7ae74.words, 32, nullptr, m_cdc1da7fcdc7ae74,
  0, 1, i_cdc1da7fcdc7ae74, nullptr, nullptr, { &s_cdc1da7fcdc7ae74, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_e738db609b477f3b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59, 127,  71, 155,  96, 219,  56, 231,
     13,   0,   0,   0,   1,   0,   0,   0,
     44, 203,  17,  32, 161,  65, 182, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,  99, 104, 111,  73,  79,  46,  99,
     97, 112, 110, 112,  58,  69,  99, 104,
    111,  82, 101, 112,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e738db609b477f3b = b_e738db609b477f3b.words;
#if !CAPNP_LITE
static const uint16_t m_e738db609b477f3b[] = {0};
static const uint16_t i_e738db609b477f3b[] = {0};
const ::capnp::_::RawSchema s_e738db609b477f3b = {
  0xe738db609b477f3b, b_e738db609b477f3b.words, 32, nullptr, m_e738db609b477f3b,
  0, 1, i_e738db609b477f3b, nullptr, nullptr, { &s_e738db609b477f3b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace echoio {
namespace messages {

// EchoReq
#ifndef _MSC_VER
constexpr uint16_t EchoReq::_capnpPrivate::dataWordSize;
constexpr uint16_t EchoReq::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind EchoReq::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EchoReq::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* EchoReq::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// EchoRep
#ifndef _MSC_VER
constexpr uint16_t EchoRep::_capnpPrivate::dataWordSize;
constexpr uint16_t EchoRep::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind EchoRep::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EchoRep::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* EchoRep::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

