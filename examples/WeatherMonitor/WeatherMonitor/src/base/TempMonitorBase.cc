//
// Auto-generated by edu.vanderbilt.riaps.generator.ComponenetGenerator.xtend
//
#include <base/TempMonitorBase.h>

namespace weathermonitor {
    namespace components {
    	
    	TempMonitorBase::TempMonitorBase(_component_conf_j &config, riaps::Actor &actor) : ComponentBase(config, actor) {
    	
    	}
    	
    	void TempMonitorBase::DispatchMessage(capnp::FlatArrayMessageReader* capnpreader, riaps::ports::PortBase *port) {
			std::cout << "TempMonitorBase::DispatchMessage()" << std::endl;
    		auto portName = port->GetPortName();
			if (portName == PORT_SUB_TEMPUPDATE) {
				messages::TempData::Reader Tempupdate = capnpreader->getRoot<messages::TempData>();
				OnTempupdate(Tempupdate, port);
			}
			
    	}
    	
    	
    	TempMonitorBase::~TempMonitorBase() {
    	
    	}
    }
}	
